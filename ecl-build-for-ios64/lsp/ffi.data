static const char compiler_data_text[] = 
"(:export) (:compile-toplevel :load-toplevel :execute) ffi::def-constant ffi::*ff"
 "i-types* ffi::def-foreign-type (nil t) ffi::def-type ffi::%convert-to-ffi-type f"
 "fi::%align-data ffi::size-of-foreign-type ffi::allocate-foreign-object ffi::free"
 "-foreign-object :separator-string (:separator-string) ffi::def-enum ffi::def-str"
 "uct ffi::slot-position ffi::get-slot-value (setf ffi::get-slot-value) ffi::get-s"
 "lot-pointer ffi::def-array-pointer ffi::deref-array (setf ffi::deref-array) ffi:"
 ":%foreign-data-set ffi::%foreign-data-ref ffi::def-union ffi::pointer-address ff"
 "i::deref-pointer (setf ffi::deref-pointer) ffi::make-null-pointer ffi::make-poin"
 "ter ffi::null-char-p ffi::ensure-char-character ffi::ensure-char-integer ffi::en"
 "sure-char-storable (* :unsigned-char) ffi::char-array-to-pointer ffi::convert-fr"
 "om-cstring ffi::convert-to-cstring ffi::free-cstring ffi::with-cstring ffi::with"
 "-cstrings ffi::foreign-string-length ffi::convert-from-foreign-string ffi::conve"
 "rt-to-foreign-string ffi::allocate-foreign-string ffi::with-foreign-string ffi::"
 "with-foreign-strings ffi::with-foreign-object ffi::with-foreign-objects ffi::wit"
 "h-cast-pointer ffi::lisp-to-c-name ffi::%convert-to-arg-type ffi::%convert-to-re"
 "turn-type :returning :module :call (:call :module :returning) ffi::c-fun (:point"
 "er-void 0) ffi::def-lib-function (:call :returning :module) (:void . #1=(:cstrin"
 "g)) #1# (:one-liner t :side-effects t) ffi::def-function (* . #2=(:array)) #2# ("
 ":side-effects t :one-liner t) 'ffi::ffi-foreign-var ffi::def-foreign-var (\"so\" \""
 "a\") (nil) (pathname string list) ffi::find-foreign-library ffi::+loaded-librarie"
 "s+ :dll ffi::do-load-foreign-library :supporting-libraries :force-load :system-l"
 "ibrary (:system-library :force-load :supporting-libraries :module) (:compile-top"
 "level) ffi::load-foreign-library ffi::defcallback ffi::callback ffi::clines ffi:"
 ":c-inline c::def-inline :always ffi::definline (:execute) ffi::defla (:one-liner"
 " t) ffi::defcbody :no-interrupts (:no-interrupts) :one-liner ffi::defentry 0 0 0"
 " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 :length :nu"
 "ll-terminated-p 0 (* :char) 0 :unsigned 0 0 0 0 0 0 0 0 0 0 0 0 :drive-letters :"
 "types 0 0 0 0 0 0 0 0 0 0 ";
#define compiler_data_text_size 2186
