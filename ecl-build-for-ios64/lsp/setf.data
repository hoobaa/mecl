static const char compiler_data_text[] = 
"(compile load eval) defsetf define-setf-expander get-setf-expansion 'compiler-ma"
 "cro 0 0 :read-only setf (nil) psetf shiftf rotatef si::env si::%reference (decla"
 "re (notinline mapcar)) (si::vars si::vals si::stores si::setter si::getter) (get"
 "-setf-expansion si::%reference si::env) si::all-vars #'(lambda (si::v) (list (ge"
 "nsym) si::v)) (symbolp si::getter) (si::getter (mapcar #'car si::all-vars)) ((ca"
 "r si::stores) `(let* ,si::all-vars (declare (:read-only ,@(mapcar #'first si::al"
 "l-vars))) ,si::setter)) ((si::d si::vars (cdr si::d)) (si::v si::vals (cdr si::v"
 ")) (si::let-list nil (cons (list (car si::d) (car si::v)) si::let-list))) (null "
 "si::d) si::let-list (car si::stores) (and (listp si::%reference) (eq (car si::%r"
 "eference) 'the)) 'the (cadr si::%reference) si::getter (append si::all-vars si::"
 "let-list) `(let* ,(nreverse si::let-list) (declare (:read-only ,@(mapcar #'first"
 " si::all-vars) ,@si::vars)) ,si::setter) define-modify-macro si::flag remf incf "
 "decf push pushnew pop 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ";
#define compiler_data_text_size 1010
