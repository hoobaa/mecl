static const char compiler_data_text[] = 
"c::*cmp-env* c::*p1-dispatch-table* c::c1form c::p1propagate c::p1trivial c::p1v"
 "ar c::p1values c::p1propagate-list c::p1merge-branches c::revise-var-type c::blk"
 " c::p1block c::p1return-from c::p1call-global c::p1call-local c::p1catch c::p1th"
 "row c::p1if (member t nil) c::p1fmla-not c::p1fmla-and c::p1fmla-or c::p1lambda "
 "c::fun c::p1propagate-function c::var c::p1let* c::p1locals c::p1multiple-value-"
 "bind c::p1multiple-value-setq c::p1progn 0 0 c::p1compiler-typecase c::p1checked"
 "-value c::p1progv c::p1setq c::p1psetq c::p1with-stack c::p1stack-push-values c:"
 ":*tagbody-depth* c::p1go c::filter-only-declarations c::p1tagbody c::p1tagbody-o"
 "ne-pass c::p1unwind-protect 0 0 0 c::type-from-array-elt c::*p0-dispatch-table* "
 "si::index 0 c::c1form-p c::c1form-env c::c1form-name c::c1form-args c::baboon c:"
 ":c1form-type c::values-type-and c::cmpnote 0 0 c::var-type c::c1form-primary-typ"
 "e c::type-and 0 c::values-type-primary-type 0 0 0 0 c::blk-type c::values-type-o"
 "r 0 0 c::propagate-types 0 c::fun-return-type 0 0 0 0 0 c::type-or 0 0 0 c::fun-"
 "lambda 0 c::global-var-p c::var-set-nodes 0 0 c::values-type-to-n-types 0 0 0 0 "
 "0 0 0 0 0 0 0 0 0 c::tag-p 0 0 c::expand-deftype ";
#define compiler_data_text_size 1169
