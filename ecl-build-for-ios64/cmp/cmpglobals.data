static const char compiler_data_text[] = 
"c::*info* c::*inline-blocks* c::*opened-c-braces* c::*inline-max-depth* c::*curr"
 "ent-form* c::|compiler preprocess| c::*current-toplevel-form* c::*compile-file-p"
 "osition* c::*first-error* c::*active-protection* c::*pending-actions* c::*compil"
 "er-conditions* c::*compiler-features* c::*suppress-compiler-messages* c::compile"
 "r-note c::*suppress-compiler-notes* c::*suppress-compiler-warnings* c::*compiler"
 "-break-enable* c::*compiler-in-use* c::*compiler-input* c::*compiler-output1* c:"
 ":*compiler-output2* c::*callbacks* c::*compile-to-linking-call* c::*compiler-dec"
 "lared-globals* c::*safety* c::*speed* c::*space* c::*debug* c::*automatic-check-"
 "type-in-lambda* c::*lcl* c::*temp* c::*max-temp* c::*level* c::*lex* c::*max-lex"
 "* c::*env* c::*max-env* c::*env-lvl* c::*aux-closure* c::*ihs-used-p* c::*next-c"
 "macro* c::*next-cfun* c::*tail-recursion-info* c::*allow-c-local-declaration* c:"
 ":*last-label* c::*exit* c::*unwind-exit* c::*current-function* c::*cmp-env* c::*"
 "cmp-env-root* #:no-macro c::*destination* c::*debug-compiler* c::*delete-files* "
 "c::*files-to-be-deleted* c::*user-ld-flags* c::*user-cc-flags* c::*do-type-propa"
 "gation* c::*compiler-phase* c::*volatile* c::*setjmps* c::*compile-toplevel* c::"
 "*clines-string-list* c::*compile-time-too* c::*not-compile-time* c::*permanent-d"
 "ata* c::*permanent-objects* c::*temporary-objects* c::*load-objects* c::*load-ti"
 "me-values* c::*setf-definitions* c::*use-static-constants-p* c::*static-constant"
 "s* c::*compile-in-constants* c::*proclaim-fixed-args* c::*global-vars* c::*globa"
 "l-funs* c::*global-cfuns-array* c::*linking-calls* c::*local-funs* c::*top-level"
 "-forms* c::*make-forms* c::*global-entries* c::*global-macros* c::*self-destruct"
 "ing-fasl* c::*undefined-vars* c::+init-env-form+ c::make-info (:64-bit :mach-o :"
 "gcc-compiler :lp64) ((*gensym-counter* 0) (c::*compiler-in-use* t) (c::*compiler"
 "-phase* 'c::t1) (c::*callbacks* nil) (c::*cmp-env-root* (copy-tree c::*cmp-env-r"
 "oot*)) (c::*cmp-env* nil) (c::*max-temp* 0) (c::*temp* 0) (c::*next-cmacro* 0) ("
 "c::*next-cfun* 0) (c::*last-label* 0) (c::*load-objects* (make-hash-table :size "
 "128 :test #'equal)) (c::*setf-definitions* nil) (c::*make-forms* nil) (c::*stati"
 "c-constants* nil) (c::*permanent-objects* nil) (c::*temporary-objects* nil) (c::"
 "*local-funs* nil) (c::*global-vars* nil) (c::*global-funs* nil) (c::*global-cfun"
 "s-array* nil) (c::*linking-calls* nil) (c::*global-entries* nil) (c::*undefined-"
 "vars* nil) (c::*top-level-forms* nil) (c::*compile-time-too* nil) (c::*clines-st"
 "ring-list* 'nil) (c::*inline-blocks* 0) (c::*open-c-braces* 0) (si::*defun-inlin"
 "e-hook* 'c::maybe-install-inline-function)) ";
#define compiler_data_text_size 2604
