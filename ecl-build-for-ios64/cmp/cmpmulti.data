static const char compiler_data_text[] = 
"c::with-stack c::stack-push-values c::c1multiple-value-call c::stack-pop c::c1mu"
 "ltiple-value-prog1 :args c::c1values c::*destination* c::return-object c::*curre"
 "nt-form* c::trash c::value0 0 0 c::*inline-blocks* c::*temp* c::c2values c::c1mu"
 "ltiple-value-setq 0 c::global 0 c::bind-or-set c::values-loc-or-value0 c::*lcl* "
 "c::do-m-v-setq c::c2multiple-value-setq c::*cmp-env* :local-vars c::c1multiple-v"
 "alue-bind c::*unwind-exit* c::*env-lvl* c::*env* c::var c::*volatile* c::c2multi"
 "ple-value-bind 0 0 c::check-args-number c::c1funcall 0 c::c1args* c::make-c1form"
 "* 0 c::cmpwarn c::c2expr* c::unwind-exit c::wt-nl c::c1form-single-valued-p c::c"
 "2expr c::inline-args c::coerce-locs c::close-inline-blocks 0 c::cmperr c::chk-sy"
 "mbol-macrolet c::policy-type-assertions c::variable-type-in-env c::trivial-type-"
 "p c::c1expr c::c1vref c::add-to-set-nodes-of-var-list 0 c::set-var c::var-ref c:"
 ":var-kind c::bind 0 c::values-loc 0 c::c1form-values-number c::useful-var-p c::m"
 "ake-lcl-var c::wt-nl-open-brace c::wt-nl-close-brace 0 0 c::cmp-env-copy c::c1bo"
 "dy c::c1declare-specials c::c1make-var c::push-vars c::check-vdecl c::c1decl-bod"
 "y c::check-vref c::c1form-type 0 c::local c::maybe-open-inline-block c::next-lcl"
 " c::rep-type-name c::var-name c::wt-comment c::var-ref-ccb c::env-grows ";
#define compiler_data_text_size 1272
