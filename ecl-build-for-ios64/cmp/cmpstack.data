static const char compiler_data_text[] = 
"c::+ecl-stack-frame-variable+ c::+ecl-local-stack-frame-variable+ c::+ecl-local-"
 "stack-variable+ (c::innermost-stack-frame) c::with-stack :args c::c1with-stack c"
 "::*destination* c::*temp* c::*volatile* c::*unwind-exit* c::stack c::c2with-stac"
 "k (:one-liner t :side-effects nil) c::c1innermost-stack-frame ((t t) :void \"ecl_"
 "stack_frame_push(#0,#1)\" :one-liner t :side-effects t) c::c1stack-push c::stack-"
 "push-values (values) ((t) :void \"ecl_stack_frame_push_values(#0)\" :one-liner t :"
 "side-effects t) c::c1stack-push-values c::c2stack-push-values ((t) (values &rest"
 " t) \"cl_env_copy->values[0]=ecl_stack_frame_pop_values(#0);\" :one-liner nil :sid"
 "e-effects t) c::c1stack-pop ((t t) (values &rest t) \"cl_env_copy->values[0]=ecl_"
 "apply_from_stack_frame(#0,#1);\" :one-liner nil :side-effects t) c::c1apply-from-"
 "stack-frame 0 c::c1expr c::c1form-type c::make-c1form* 0 c::tmp-destination c::w"
 "t-nl-open-brace c::wt-nl c::c2expr* c::wt-nl-close-brace c::unwind-exit 0 0 0 0 "
 "c::c2expr 0 0 ";
#define compiler_data_text_size 974
