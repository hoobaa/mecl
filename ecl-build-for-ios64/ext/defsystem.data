static const char compiler_data_text[] = 
"make::make :mk-defsystem make::*special-exports* make::*exports* make::*other-ex"
 "ports* make::*defsystem-version* make::*dont-redefine-require* make::*multiple-l"
 "isp-support* make::home-subdirectory make::*central-registry* make::add-registry"
 "-location make::registry-pathname make::print-central-registry-directories make:"
 ":list-central-registry-directories make::*bin-subdir* make::*tell-user-when-done"
 "* make::*oos-verbose* make::*oos-test* make::*load-source-if-no-binary* make::*b"
 "other-user-if-no-binary* make::*load-source-instead-of-binary* make::*compile-du"
 "ring-load* :query make::*minimal-load* make::*files-missing-is-an-error* make::*"
 "operations-propagate-to-subsystems* make::*compile-error-file-type* make::*cmu-e"
 "rrors-to-terminal* make::*cmu-errors-to-file* :cmu make::*filename-extensions* m"
 "ake::*system-extension* make::*system-dependencies-delayed* make::non-empty-list"
 "p make::*version-dir* make::*version-replace* make::*version* make::*component-o"
 "perations* make::component-operation make::afs-binary-directory make::*find-irix"
 "-version-script* make::operating-system-version make::compiler-version make::afs"
 "-binary-directory make::afs-source-directory make::null-string make::ensure-trai"
 "ling-slash make::afs-component make::*machine-type-alist* make::machine-type-tra"
 "nslation make::*software-type-alist* make::software-type-translation make::*comp"
 "iler-type-alist* make::compiler-type-translation make::canonicalize-system-name "
 "make::*defined-systems* make::get-system make::undefsystem make::defined-systems"
 " make::defined-names-and-systems make::new-append-directories :item make::direct"
 "ory-to-list make::*append-dirs-tests* make::test-new-append-directories make::ap"
 "pend-directories make::pathname-logical-p make::namestring-probably-logical (log"
 "ical-pathname pathname) make::append-logical-pnames make::new-file-type make::*s"
 "ource-pathname-default* make::*binary-pathname-default* make::topological-sort-n"
 "ode make::topsort- make::copy-topological-sort-node make::topological-sort-node-"
 "p :white :gray 0 :black 0 0 (member :gray :black :white) make::color 0 make::mak"
 "e-topological-sort-node make::*component-evaluated-slots* make::*component-form-"
 "slots* make::component make::copy-component make::print-component make::componen"
 "t-p 0 0 make::non-required-p (or null string) make::version make::maintainer mak"
 "e::licence make::author make::long-documentation make::banner make::depends-on m"
 "ake::components make::compiler-options (or null symbol function) make::loader ma"
 "ke::compiler (or null symbol) make::language (mod 1024) make::indent (or symbol "
 "string) make::name (:defsystem :system :subsystem :module :file :private-file) ("
 "member :defsystem :system :subsystem :module :file :private-file) 0 make::make-c"
 "omponent make::foreign-system make::copy-foreign-system make::foreign-system-p :"
 "system 0 make::make-foreign-system :kind make::register-foreign-system make::mis"
 "sing-component :component make::missing-module make::missing-system make::*file-"
 "load-time-table* :defsystem (or string pathname null) (:file :private-file) :pri"
 "vate-file 0 :source (:defsystem :private-file :file) (string pathname make::comp"
 "onent) make::component-load-time make::component-type make::component-name (make"
 "::path (when make::name (make::compute-system-path make::name nil))) (declare (t"
 "ype (or string pathname null) make::path)) make::path (gethash (namestring make:"
 ":path) make::*file-load-time-table*) make::component-full-pathname (gethash make"
 "::path make::*file-load-time-table*) (symbol string) make::compute-system-path m"
 "ake::system-definition-pathname make::*reload-systems-from-disk* :ask :load :loa"
 "d-or-nil (:ask :error :load-or-nil :load) make::find-system make::print-componen"
 "t :binary make::describe-system make::canonicalize-component-name (:source :bina"
 "ry :error) make::component-pathname make::component-error-pathname make::compone"
 "nt-source-pathname make::component-binary-pathname 0 0 (:source :error :binary) "
 "make::component-root-dir make::component-source-root-dir make::component-binary-"
 "root-dir make::*source-pathnames-table* make::*binary-pathnames-table* make::*re"
 "set-full-pathname-table* make::clear-full-pathname-tables make::component-full-p"
 "athname make::component-full-pathname-i make::translate-version make::component-"
 "extension make::component-source-extension make::component-binary-extension :ind"
 "ent :load-only :compile-only :compiler-options :load-always :subsystem make::cre"
 "ate-component make::preprocess-component-definition :source-pathname (when *load"
 "-pathname* (make-pathname :name nil :type nil :defaults *load-pathname*)) (nil 0"
 ") make::defsystem (:source :binary) make::create-component-pathnames 0 (:system)"
 " :module 0 0 make::generate-component-pathname :serial make::expand-component-co"
 "mponents make::expand-component-definitions make::expand-serial-component-chain "
 "make::*enable-straz-absolute-string-hack* make::absolute-file-namestring-p make:"
 ":expand-component-definition make::link-component-depends-on make::topological-s"
 "ort make::split-string make::prompt-string make::format-justified-string 0 :comp"
 "ile 0 (load :load) 0 make::tell-user make::tell-user-done make::with-tell-user m"
 "ake::tell-user-no-files make::tell-user-require-system make::tell-user-generic m"
 "ake::*use-timeouts* make::*clear-input-before-query* make::*sleep-amount* make::"
 "internal-real-time-in-seconds make::read-char-wait (#\\Tab #\\Newline #\\Return) (#"
 "\\y #\\Y #\\ ) (#\\n #\\N) make::y-or-n-p-wait make::%%component%% (declare (special "
 "make::%%component%%)) make::with-special-component-vars :all :new-source-and-dep"
 "endents 0 0 0 make::operate-on-system :force :load-source-instead-of-binary :loa"
 "d-source-if-no-binary :bother-user-if-no-binary :compile-during-load :dribble :m"
 "inimal-load make::compile-system make::load-system :delete-binaries make::clean-"
 "system :edit make::edit-system :hardcopy make::hardcopy-system (member (make::co"
 "mponent-type make::component) '#1=(:subsystem :system)) #1# make::ensure-externa"
 "l-system-def-loaded 0 0 0 0 make::operate-on-component make::*force* make::*prov"
 "iding-blocks-load-propagation* (:defsystem :subsystem :system) make::operate-on-"
 "system-dependencies make::module-depends-on-changed :new-source-all make::operat"
 "e-on-components make::*old-require* make::new-require make::cmucl-mk-defsystem-m"
 "odule-provider make::*language-table* make::find-language make::copy-language ma"
 "ke::print-language make::language-p 0 make::make-language make::print-language :"
 "lisp make::compile-function make::load-function make::default-source-extension m"
 "ake::default-binary-extension :compiler :loader :source-extension :binary-extens"
 "ion (:binary-extension :source-extension :loader :compiler) make::define-languag"
 "e #:scheme #:interaction-environment make::scheme-compile-file :scheme make::*c-"
 "compiler* make::run-unix-program make::*default-shell* make::run-shell-command m"
 "ake::default-output-pathname make::run-compiler (\"-c\") (\"-g\") make::c-compile-fi"
 "le :c make::*fortran-compiler* make::*fortran-options* make::fortran-compile-fil"
 "e :fortran make::*ar-program* make::build-lib make::compile-and-load-operation m"
 "ake::load-file-operation make::compile-and-load-operation make::unmunge-lucid (:"
 "all :new-source-all t) (:new-source :new-source-and-dependents) :output-file :no"
 "-dots make::compile-file-operation make::compiled-file-p make::compiled-file-p m"
 "ake::needs-compilation make::needs-loading (:new-source :new-source-and-dependen"
 "ts :new-source-all) (:all :new-source-all) make::load-file-operation :clean make"
 "::delete-binaries-operation make::clean make::delete-binaries make::delete-binar"
 "ies-operation make::binary-exists make::compile-and-load-source-if-no-binary mak"
 "e::load-source-if-no-binary :new-source make::files-which-need-compilation make:"
 ":files-in-system-and-dependents 0 0 make::files-in-system make::file-pathnames-i"
 "n-component (:all t) make::file-components-in-component make::oos make::*print-c"
 "ommand* make::system-source-size make::file-list-size si::dodefpackage 0 0 0 0 0"
 " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 :color 0 :color :type :name"
 " :indent :host :device :source-root-dir :source-pathname :source-extension :bina"
 "ry-pathname :binary-root-dir :binary-extension :package :language :compiler :loa"
 "der :compiler-options :components :depends-on :proclamations :initially-do :fina"
 "lly-do :compile-form :load-form :load-only :compile-only :load-always :banner :d"
 "ocumentation :long-documentation :author :licence :maintainer :version :non-requ"
 "ired-p 0 :color :type :name :indent :host :device :source-root-dir :source-pathn"
 "ame :source-extension :binary-pathname :binary-root-dir :binary-extension :packa"
 "ge :language :compiler :loader :compiler-options :components :depends-on :procla"
 "mations :initially-do :finally-do :compile-form :load-form :load-only :compile-o"
 "nly :load-always :banner :documentation :long-documentation :author :licence :ma"
 "intainer :version :non-required-p :kind :object 0 :representation :kind make::mi"
 "ssing-component-name make::missing-component-component 0 0 0 0 0 0 make::compone"
 "nt-host make::component-device make::component-package make::component-depends-o"
 "n make::component-components 0 0 0 0 0 0 0 0 0 :local 0 make::component-load-onl"
 "y make::component-compile-only make::component-compiler-options make::component-"
 "load-always 0 0 0 make::component-language make::component-compiler make::compon"
 "ent-loader 0 0 0 0 0 0 0 0 make::topsort-color 0 :item :test 0 make::component-i"
 "ndent 0 0 0 0 0 0 0 0 0 0 0 0 :force :version :test :verbose :load-source-instea"
 "d-of-binary :load-source-if-no-binary :bother-user-if-no-binary :compile-during-"
 "load :dribble :minimal-load :override-compilation-unit 0 0 0 :force :version :te"
 "st :verbose :dribble 0 0 0 0 make::component-proclamations make::component-initi"
 "ally-do make::component-finally-do 0 0 0 make::component-compile-form make::comp"
 "onent-load-form 0 0 0 0 :name :compiler :loader :source-extension :binary-extens"
 "ion 0 make::language-name make::language-source-extension make::language-binary-"
 "extension 0 make::language-compiler 0 make::language-loader 0 0 0 0 0 make::syst"
 "em 0 :output :shell 0 0 0 :output-file :error-file :error-output :verbose :debug"
 " :link :optimize :cflags :definitions :include-paths :library-paths :libraries :"
 "error 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 (\"MK\") (\"COMMON-LISP\") (make::oper"
 "ate-on-system make::oos make::afs-binary-directory make::afs-source-directory ma"
 "ke::files-in-system) (make::*central-registry* make::*bin-subdir* make::add-regi"
 "stry-location make::list-central-registry-directories make::print-central-regist"
 "ry-directories make::find-system make::defsystem make::compile-system make::load"
 "-system make::hardcopy-system make::system-definition-pathname make::missing-com"
 "ponent make::missing-component-name make::missing-component-component make::miss"
 "ing-module make::missing-system make::register-foreign-system make::machine-type"
 "-translation make::software-type-translation make::compiler-type-translation mak"
 "e::define-language make::allegro-make-system-fasl make::files-which-need-compila"
 "tion make::undefsystem make::defined-systems make::describe-system make::clean-s"
 "ystem make::edit-system make::system-source-size make::make-system-tag-table mak"
 "e::*defsystem-version* make::*compile-during-load* make::*minimal-load* make::*d"
 "ont-redefine-require* make::*files-missing-is-an-error* make::*reload-systems-fr"
 "om-disk* make::*source-pathname-default* make::*binary-pathname-default* make::*"
 "multiple-lisp-support* make::run-unix-program make::*default-shell* make::run-sh"
 "ell-command) (\"./\" (make::home-subdirectory \"lisp/systems/\")) (\"lsp\" . \"fas\") (\""
 "~/foo/\" \"baz/bar.lisp\" \"~/foo\" \"baz/bar.lisp\" \"/foo/bar/\" \"baz/barf.lisp\" \"/foo/"
 "bar/\" \"/baz/barf.lisp\" \"foo/bar/\" \"baz/barf.lisp\" \"foo/bar\" \"baz/barf.lisp\" \"foo"
 "/bar\" \"/baz/barf.lisp\" \"foo/bar/\" \"/baz/barf.lisp\" \"/foo/bar/\" nil \"foo/bar/\" ni"
 "l \"foo/bar\" nil \"foo\" nil \"foo\" \"\" nil \"baz/barf.lisp\" nil \"/baz/barf.lisp\" nil "
 "nil) ((make::color :white :type #2=(member :gray :black :white))) ((make::color "
 ":white #2# nil 0 nil)) (make::make-topological-sort-node) (:source-root-dir :sou"
 "rce-pathname :source-extension :binary-root-dir :binary-pathname :binary-extensi"
 "on) (:initially-do :finally-do :compile-form :load-form) ((type :file :type #3=("
 "member :defsystem :system :subsystem :module :file :private-file)) (make::name n"
 "il :type #4=(or symbol string)) (make::indent 0 :type #5=(mod 1024)) make::host "
 "make::device make::source-root-dir (make::source-pathname make::*source-pathname"
 "-default*) make::source-extension (make::binary-pathname make::*binary-pathname-"
 "default*) make::binary-root-dir make::binary-extension package (make::language n"
 "il :type #6=(or null symbol)) (make::compiler nil :type #7=(or null symbol funct"
 "ion)) (make::loader nil :type #8=(or null symbol function)) (make::compiler-opti"
 "ons nil :type list) (make::components nil :type list) (make::depends-on nil :typ"
 "e list) make::proclamations (make::initially-do #9=(lambda nil nil)) (make::fina"
 "lly-do #10=(lambda nil nil)) (make::compile-form #11=(lambda nil nil)) (make::lo"
 "ad-form #12=(lambda nil nil)) make::load-only make::compile-only make::load-alwa"
 "ys (make::banner nil :type #13=(or null string)) (documentation nil :type #14=(o"
 "r null string)) (make::long-documentation nil :type #15=(or null string)) (make:"
 ":author nil :type #16=(or null string)) (make::licence nil :type #17=(or null st"
 "ring)) (make::maintainer nil :type #18=(or null string)) (make::version nil :typ"
 "e #19=(or null string)) (make::non-required-p nil :type boolean)) ((make::color "
 ":white (member :gray :black :white) nil 0 make::topsort-color) (type :file #3# n"
 "il 1 nil) (make::name nil #4# nil 2 nil) (make::indent 0 #5# nil 3 nil) (make::h"
 "ost nil t nil 4 nil) (make::device nil t nil 5 nil) (make::source-root-dir nil t"
 " nil 6 nil) (make::source-pathname make::*source-pathname-default* t nil 7 nil) "
 "(make::source-extension nil t nil 8 nil) (make::binary-pathname make::*binary-pa"
 "thname-default* t nil 9 nil) (make::binary-root-dir nil t nil 10 nil) (make::bin"
 "ary-extension nil t nil 11 nil) (package nil t nil 12 nil) (make::language nil #"
 "6# nil 13 nil) (make::compiler nil #7# nil 14 nil) (make::loader nil #8# nil 15 "
 "nil) (make::compiler-options nil list nil 16 nil) (make::components nil list nil"
 " 17 nil) (make::depends-on nil list nil 18 nil) (make::proclamations nil t nil 1"
 "9 nil) (make::initially-do #9# t nil 20 nil) (make::finally-do #10# t nil 21 nil"
 ") (make::compile-form #11# t nil 22 nil) (make::load-form #12# t nil 23 nil) (ma"
 "ke::load-only nil t nil 24 nil) (make::compile-only nil t nil 25 nil) (make::loa"
 "d-always nil t nil 26 nil) (make::banner nil #13# nil 27 nil) (documentation nil"
 " #14# nil 28 nil) (make::long-documentation nil #15# nil 29 nil) (make::author n"
 "il #16# nil 30 nil) (make::licence nil #17# nil 31 nil) (make::maintainer nil #1"
 "8# nil 32 nil) (make::version nil #19# nil 33 nil) (make::non-required-p nil boo"
 "lean nil 34 nil)) (make::make-component) (make::kind make::object) ((make::color"
 " :white (member :gray :black :white) nil 0 make::component-color) (type :system "
 "t nil 1 make::component-type) (make::name nil (or symbol string) nil 2 make::com"
 "ponent-name) (make::indent 0 (mod 1024) nil 3 make::component-indent) (make::hos"
 "t nil t nil 4 make::component-host) (make::device nil t nil 5 make::component-de"
 "vice) (make::source-root-dir nil t nil 6 make::component-source-root-dir) (make:"
 ":source-pathname make::*source-pathname-default* t nil 7 make::component-source-"
 "pathname) (make::source-extension nil t nil 8 make::component-source-extension) "
 "(make::binary-pathname make::*binary-pathname-default* t nil 9 make::component-b"
 "inary-pathname) (make::binary-root-dir nil t nil 10 make::component-binary-root-"
 "dir) (make::binary-extension nil t nil 11 make::component-binary-extension) (pac"
 "kage nil t nil 12 make::component-package) (make::language nil (or null symbol) "
 "nil 13 make::component-language) (make::compiler nil (or null symbol function) n"
 "il 14 make::component-compiler) (make::loader nil (or null symbol function) nil "
 "15 make::component-loader) (make::compiler-options nil list nil 16 make::compone"
 "nt-compiler-options) (make::components nil list nil 17 make::component-component"
 "s) (make::depends-on nil list nil 18 make::component-depends-on) (make::proclama"
 "tions nil t nil 19 make::component-proclamations) (make::initially-do (lambda ni"
 "l nil) t nil 20 make::component-initially-do) (make::finally-do (lambda nil nil)"
 " t nil 21 make::component-finally-do) (make::compile-form (lambda nil nil) t nil"
 " 22 make::component-compile-form) (make::load-form (lambda nil nil) t nil 23 mak"
 "e::component-load-form) (make::load-only nil t nil 24 make::component-load-only)"
 " (make::compile-only nil t nil 25 make::component-compile-only) (make::load-alwa"
 "ys nil t nil 26 make::component-load-always) (make::banner nil (or null string) "
 "nil 27 make::component-banner) (documentation nil (or null string) nil 28 make::"
 "component-documentation) (make::long-documentation nil (or null string) nil 29 m"
 "ake::component-long-documentation) (make::author nil (or null string) nil 30 mak"
 "e::component-author) (make::licence nil (or null string) nil 31 make::component-"
 "licence) (make::maintainer nil (or null string) nil 32 make::component-maintaine"
 "r) (make::version nil (or null string) nil 33 make::component-version) (make::no"
 "n-required-p nil boolean nil 34 make::component-non-required-p) (make::kind nil "
 "t nil 35 nil) (make::object nil t nil 36 nil)) (make::make-foreign-system) (simp"
 "le-condition) (:initform (lambda (make::mmc stream) (format stream \"MK:DEFSYSTEM"
 ": missing component ~S for ~S.\" (make::missing-component-name make::mmc) (make::"
 "missing-component-component make::mmc))) :name si::report-function) (:initargs ("
 ":name) :readers (make::missing-component-name) :name make::name) (:initargs (:co"
 "mponent) :readers (make::missing-component-component) :name make::component) (ma"
 "ke::missing-component) (:initform (lambda (make::mmc stream) (format stream \"MK:"
 "DEFSYSTEM: missing module ~S for ~S.\" (make::missing-component-name make::mmc) ("
 "make::missing-component-component make::mmc))) :name si::report-function) (make:"
 ":missing-module) (:initform (lambda (make::msc stream) (format stream \"MK:DEFSYS"
 "TEM: missing system ~S~@[ for S~].\" (make::missing-component-name make::msc) (ma"
 "ke::missing-component-component make::msc))) :name si::report-function) (make::%"
 "%component%%) (make::name make::compiler make::loader make::source-extension mak"
 "e::binary-extension) ((make::name nil t nil 0 nil) (make::compiler nil t nil 1 n"
 "il) (make::loader nil t nil 2 nil) (make::source-extension nil t nil 3 nil) (mak"
 "e::binary-extension nil t nil 4 nil)) (make::make-language) (make::*fortran-comp"
 "iler* make::*fortran-options*) (\"-O\") (make::*ar-program* make::build-lib) ";
#define compiler_data_text_size 18635
