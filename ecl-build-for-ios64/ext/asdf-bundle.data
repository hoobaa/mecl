static const char compiler_data_text[] = 
"asdf::fasl-type asdf::bundle-op asdf::fasl-op asdf::lib-op asdf::dll-op asdf::mo"
 "nolithic-bundle-op asdf::bundle-op-monolithic-p asdf::monolithic-fasl-op asdf::m"
 "onolithic-lib-op asdf::monolithic-dll-op asdf::program-op asdf::name-suffix asdf"
 "::original-initargs :lisp-files :prologue-code :epilogue-code (:epilogue-code :p"
 "rologue-code :lisp-files) (asdf::lisp-files asdf::epilogue-code asdf::prologue-c"
 "ode) (type asdf::monolithic asdf::name-suffix) asdf::bundle-op-build-args :ld-fl"
 "ags asdf::*force-load-p* asdf::operation-done-p asdf::load-op asdf::gather-compo"
 "nents asdf::bundle-sub-operations :delete-methods :filter-type asdf::system :inc"
 "lude-self asdf::compile-op :filter-system (not asdf::system) asdf::component-dep"
 "ends-on asdf::input-files asdf::output-files asdf::perform :binary 0 asdf::monol"
 "ithic-binary-op asdf::binary-op :dll 0 :shared-library 0 :lib 0 :static-library "
 "0 :fasl 0 :program 0 (:binary :shared-library :dll :static-library :lib :fasl :p"
 "rogram) asdf::select-operation (asdf::monolithic type asdf::move-here) 0 asdf::m"
 "ake-build asdf::load-fasl-op asdf::compiled-file asdf::trivial-system-p asdf::co"
 "mponent-relative-pathname asdf::relative-pathname asdf::prebuilt-system :args as"
 "df::binary-op-dependencies :keyword asdf::defsystem :class :components :compiled"
 "-file asdf::copy-stream-to-stream (unsigned-byte 8) asdf::concatenate-files asdf"
 "::add-pathname-suffix asdf::add-pathname-suffix asdf::combine-fasls asdf::combin"
 "e-fasls asdf::call-with-staging-pathname asdf::with-staging-pathname asdf::preco"
 "mpiled-system asdf::system-fasl ((or pathname string) function cons) 0 0 :name-s"
 "uffix 0 asdf::remove-keys (setf asdf::monolithic-op-prologue-code) (setf asdf::m"
 "onolithic-op-epilogue-code) (setf asdf::bundle-op-lisp-files) (setf asdf::bundle"
 "-op-build-args) 0 :filter-system :filter-type :include-self asdf::traverse asdf:"
 ":component-system asdf::component-name asdf::strcat asdf::system-source-director"
 "y asdf::bundle-op-type 0 0 :monolithic :type :move-here asdf::operate asdf::find"
 "-system asdf::module-components asdf::component-operation-times 0 asdf::componen"
 "t-parent-pathname asdf::coerce-pathname asdf::component-pathname asdf::prebuilt-"
 "system-static-library 0 asdf::merge-pathnames* 0 :element-type :buffer-size 0 0 "
 "0 asdf::implementation-type 0 asdf::probe-file* 0 asdf::%system-fasl c::builder "
 "asdf::bundle-op-lisp-files asdf::monolithic-op-prologue-code asdf::monolithic-op"
 "-epilogue-code (asdf::operation) ((:writers ((setf asdf::bundle-op-build-args)) "
 ":readers (asdf::bundle-op-build-args) :initform nil :initargs (:args) :name asdf"
 "::build-args) (:initform nil :initargs (:name-suffix) :name asdf::name-suffix) ("
 ":readers (asdf::bundle-op-type) :name type) (:writers ((setf asdf::bundle-op-lis"
 "p-files)) :readers (asdf::bundle-op-lisp-files) :initform nil :name asdf::lisp-f"
 "iles)) (asdf::bundle-op) ((:initform :fasl :name type)) ((:initform :lib :name t"
 "ype)) ((:initform :dll :name type)) ((:writers ((setf asdf::monolithic-op-prolog"
 "ue-code)) :readers (asdf::monolithic-op-prologue-code) :name asdf::prologue-code"
 ") (:writers ((setf asdf::monolithic-op-epilogue-code)) :readers (asdf::monolithi"
 "c-op-epilogue-code) :name asdf::epilogue-code)) (asdf::monolithic-bundle-op asdf"
 "::fasl-op) (asdf::monolithic-bundle-op asdf::lib-op) (asdf::monolithic-bundle-op"
 " asdf::dll-op) (asdf::monolithic-bundle-op) ((:initform :program :name type)) (:"
 "after) (asdf::instance &rest asdf::initargs &key (asdf::name-suffix nil asdf::na"
 "me-suffix-p) &allow-other-keys) (:around) (asdf::lib-op) (asdf::op) (asdf::load-"
 "op t) (asdf::operation asdf::c) (asdf::operation asdf::component) (asdf::monolit"
 "hic-bundle-op t) (asdf::o asdf::c) (asdf::lib-op t) (asdf::monolithic-lib-op t) "
 "(asdf::dll-op t) (asdf::fasl-op t) (asdf::bundle-op asdf::system) (asdf::lib-op "
 "asdf::system) (asdf::bundle-op t) (asdf::bundle-op asdf::source-file) (asdf::loa"
 "d-fasl-op asdf::system) (asdf::load-fasl-op t) (asdf::component) ((:initform nil"
 " :name type)) (asdf::compiled-file) (t asdf::compiled-file) (asdf::load-op asdf:"
 ":compiled-file) (asdf::load-fasl-op asdf::compiled-file) (asdf::system) ((:inita"
 "rgs (:lib) :writers ((setf asdf::prebuilt-system-static-library)) :readers (asdf"
 "::prebuilt-system-static-library) :name asdf::static-library)) (asdf::lib-op asd"
 "f::prebuilt-system) (asdf::monolithic-lib-op asdf::prebuilt-system) (asdf::monol"
 "ithic-bundle-op asdf::prebuilt-system) (asdf::binary-op asdf::monolithic-bundle-"
 "op) (asdf::binary-op asdf::system) (asdf::o asdf::s) ((notinline asdf::add-pathn"
 "ame-suffix)) (asdf::fasl-op asdf::source-file) ((:readers (asdf::%system-fasl) :"
 "initargs (:fasl) :name asdf::fasl)) (asdf::precompiled-system) (asdf::load-op as"
 "df::precompiled-system) (asdf::load-fasl-op asdf::precompiled-system) (asdf::fas"
 "l-op asdf::system) (asdf::load-fasl-op asdf::precompiled-system asdf::make-build"
 ") (\"fasb\" . si::load-binary) ";
#define compiler_data_text_size 4829
