static const char compiler_data_text[] = 
":delete-methods gray::stream-p si::index (member :input :output) #1=(cl:close cl"
 ":stream-element-type cl:input-stream-p cl:open-stream-p cl:output-stream-p cl:st"
 "reamp) gray::redefine-cl-functions gray::*clos-booted* :abort (setf gray::open-s"
 "tream-p) 0 (stream gray::column) (stream) (stream &key abort) (stream sequence &"
 "optional gray::start gray::end) (stream character) (stream integer) (stream stri"
 "ng &optional gray::start gray::end) (stream &optional position) (stream &optiona"
 "l gray::direction) (standard-object stream) ((:writers ((setf gray::open-stream-"
 "p)) :readers (gray::open-stream-p) :initform t :name gray::open-p)) (gray::funda"
 "mental-stream) (gray::fundamental-input-stream gray::fundamental-character-strea"
 "m) (gray::fundamental-output-stream gray::fundamental-character-stream) (gray::f"
 "undamental-input-stream gray::fundamental-binary-stream) (gray::fundamental-outp"
 "ut-stream gray::fundamental-binary-stream) (gray::fundamental-character-output-s"
 "tream t) (gray::fundamental-character-input-stream) (ext::ansi-stream) (t) (gray"
 "::fundamental-output-stream) (gray::fundamental-character-stream) (gray::fundame"
 "ntal-character-output-stream) (gray::fundamental-input-stream) (ext::ansi-stream"
 " t) (gray::fundamental-character-input-stream t) (stream sequence &optional (gra"
 "y::start 0) (gray::end nil)) (gray::fundamental-binary-input-stream t) (t t) (st"
 "ream sequence &optional (gray::start 0) gray::end) (gray::fundamental-binary-out"
 "put-stream t) (stream string &optional (gray::start 0) gray::end) (:before) (str"
 "eam &optional (gray::direction :input)) (two-way-stream) (file-stream) (nil) (:e"
 "xternal) #1# ";
#define compiler_data_text_size 1613
