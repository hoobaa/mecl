static const char compiler_data_text[] = 
"make-load-form-saving-slots clos::*load-form-cache* (or character number) clos::"
 "need-to-make-load-form clos::i (car clos::i) (cdr clos::i) clos::unnamed ((singl"
 "e-float . \"#<single-float quiet NaN>\") (double-float . \"#<double-float quiet NaN"
 ">\") (long-float . \"#<long-float quiet NaN>\") (short-float . \"#<short-float quiet"
 " NaN>\")) ext::float-nan-string ((single-float . \"#.ext::single-float-negative-in"
 "finity\") (double-float . \"#.ext::double-float-negative-infinity\") (long-float . "
 "\"#.ext::long-float-negative-infinity\") (short-float . \"#.ext::short-float-negati"
 "ve-infinity\")) ((single-float . \"#.ext::single-float-positive-infinity\") (double"
 "-float . \"#.ext::double-float-positive-infinity\") (long-float . \"#.ext::long-flo"
 "at-positive-infinity\") (short-float . \"#.ext::short-float-positive-infinity\")) e"
 "xt::float-infinity-string clos::superiors 0 clos::inferiors 0 0 :slot-names :env"
 "ironment 0 0 (t) (clos::object &optional clos::env) (standard-object) (clos::obj"
 "ect &optional clos::environment) (structure-object) (condition) (class) (class &"
 "optional clos::environment) (package) (package &optional clos::environment) (t t"
 ") (ext::instance stream) (class t) (class stream) (standard-generic-function t) "
 "(clos::gf stream) (standard-method t) (clos::m stream) (clos::obj stream) ";
#define compiler_data_text_size 1274
