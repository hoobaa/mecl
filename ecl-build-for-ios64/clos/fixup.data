static const char compiler_data_text[] = 
"0 0 0 clos::*early-methods* clos::method-class clos::method-p :generic-function "
 ":qualifiers :specializers make-method clos::congruent-lambda-p clos::lambda-list"
 " add-method clos::temp-method clos::function-to-method remove-method clos::aux-c"
 "ompute-applicable-methods clos::no-primary-method 0 0 clos::setf-find-class :del"
 "ete-methods clos::*clos-booted* clos::initargs-updater clos::valid-initargs clos"
 "::recursively-update-classes clos::class-id 0 0 0 0 0 0 0 clos::compute-g-f-spec"
 "-list clos::set-generic-function-dispatch clos::update-dependents 0 clos::wrappe"
 "d-method-function 0 0 0 0 0 clos::classp clos::class-dependents 0 clos::generic-"
 "function-dependents 0 0 (clos::std-class clos::direct-slot-definition) (class cl"
 "os::direct-slot &rest clos::initargs) ((clos::gf standard-generic-function) (met"
 "hod standard-method)) ((clos::gf standard-generic-function) clos::qualifiers clo"
 "s::specializers &optional error) (standard-generic-function t) (clos::gf clos::a"
 "rgs) (clos::gf clos::classes) ((clos::gf standard-generic-function) method-combi"
 "nation clos::applicable-methods) (t t) (clos::gf method &rest clos::args) (class"
 " t) (clos::c clos::dep) (generic-function t) (clos::c clos::dependent) (clos::c "
 "function) (clos::object clos::dependent &rest clos::initargs) (generic-function "
 "clos::initargs-updater) (clos::object clos::dep &rest clos::initargs) ((clos::gf"
 " standard-generic-function) (method standard-method) clos::lambda-form clos::env"
 "ironment) ((clos::gf standard-generic-function)) ((clos::gf standard-generic-fun"
 "ction) clos::method-combination-type-name clos::method-combination-options) ";
#define compiler_data_text_size 1596
