# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 1996, 1997, 1999, 2000, 2001, 2002, 2003 Free Software
# Foundation, Inc.
#
# Copyright 2008 Jason Moxham
#
# This file is part of the GNU MP Library.
#
# The GNU MP Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at your
# option) any later version.
#
# The GNU MP Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the GNU MP Library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.
VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = bit$(EXEEXT) convert$(EXEEXT) dive$(EXEEXT) \
	dive_ui$(EXEEXT) io$(EXEEXT) logic$(EXEEXT) reuse$(EXEEXT) \
	t-addsub$(EXEEXT) t-aorsmul$(EXEEXT) t-bin$(EXEEXT) \
	t-cdiv_ui$(EXEEXT) t-cmp$(EXEEXT) t-cmp_d$(EXEEXT) \
	t-cmp_si$(EXEEXT) t-cong$(EXEEXT) t-cong_2exp$(EXEEXT) \
	t-div_2exp$(EXEEXT) t-divis$(EXEEXT) t-divis_2exp$(EXEEXT) \
	t-export$(EXEEXT) t-fac_ui$(EXEEXT) t-fdiv$(EXEEXT) \
	t-fdiv_ui$(EXEEXT) t-fib_ui$(EXEEXT) t-fits$(EXEEXT) \
	t-gcd$(EXEEXT) t-gcd_ui$(EXEEXT) t-get_d$(EXEEXT) \
	t-get_d_2exp$(EXEEXT) t-get_si$(EXEEXT) t-get_sx$(EXEEXT) \
	t-get_ux$(EXEEXT) t-hamdist$(EXEEXT) t-import$(EXEEXT) \
	t-inp_str$(EXEEXT) t-io_raw$(EXEEXT) t-jac$(EXEEXT) \
	t-lcm$(EXEEXT) t-likely_prime_p$(EXEEXT) t-lucnum_ui$(EXEEXT) \
	t-mul$(EXEEXT) t-mul_i$(EXEEXT) t-next_likely_prime$(EXEEXT) \
	t-oddeven$(EXEEXT) t-perfpow$(EXEEXT) t-perfsqr$(EXEEXT) \
	t-popcount$(EXEEXT) t-pow$(EXEEXT) t-powm$(EXEEXT) \
	t-powm_ui$(EXEEXT) t-pprime_p$(EXEEXT) t-root$(EXEEXT) \
	t-scan$(EXEEXT) t-set_d$(EXEEXT) t-set_f$(EXEEXT) \
	t-set_si$(EXEEXT) t-set_str$(EXEEXT) t-set_sx$(EXEEXT) \
	t-set_ux$(EXEEXT) t-sizeinbase$(EXEEXT) t-sqrtrem$(EXEEXT) \
	t-tdiv$(EXEEXT) t-tdiv_ui$(EXEEXT) t-trial_division$(EXEEXT) \
	$(am__EXEEXT_1)
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@am__append_1 = st_hamdist st_popcount
subdir = tests/mpz
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@am__EXEEXT_1 =  \
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@	st_hamdist$(EXEEXT) \
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@	st_popcount$(EXEEXT)
bit_SOURCES = bit.c
bit_OBJECTS = bit.$(OBJEXT)
bit_LDADD = $(LDADD)
bit_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
convert_SOURCES = convert.c
convert_OBJECTS = convert.$(OBJEXT)
convert_LDADD = $(LDADD)
convert_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
dive_SOURCES = dive.c
dive_OBJECTS = dive.$(OBJEXT)
dive_LDADD = $(LDADD)
dive_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
dive_ui_SOURCES = dive_ui.c
dive_ui_OBJECTS = dive_ui.$(OBJEXT)
dive_ui_LDADD = $(LDADD)
dive_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
io_SOURCES = io.c
io_OBJECTS = io.$(OBJEXT)
io_LDADD = $(LDADD)
io_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
logic_SOURCES = logic.c
logic_OBJECTS = logic.$(OBJEXT)
logic_LDADD = $(LDADD)
logic_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
reuse_SOURCES = reuse.c
reuse_OBJECTS = reuse.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
am__st_hamdist_SOURCES_DIST = t-hamdist.c
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@am_st_hamdist_OBJECTS =  \
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@	t-hamdist.$(OBJEXT)
st_hamdist_OBJECTS = $(am_st_hamdist_OBJECTS)
st_hamdist_LDADD = $(LDADD)
st_hamdist_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
st_hamdist_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(st_hamdist_LDFLAGS) $(LDFLAGS) -o $@
am__st_popcount_SOURCES_DIST = t-popcount.c
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@am_st_popcount_OBJECTS =  \
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@	t-popcount.$(OBJEXT)
st_popcount_OBJECTS = $(am_st_popcount_OBJECTS)
st_popcount_LDADD = $(LDADD)
st_popcount_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
st_popcount_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(st_popcount_LDFLAGS) $(LDFLAGS) -o $@
t_addsub_SOURCES = t-addsub.c
t_addsub_OBJECTS = t-addsub.$(OBJEXT)
t_addsub_LDADD = $(LDADD)
t_addsub_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_aorsmul_SOURCES = t-aorsmul.c
t_aorsmul_OBJECTS = t-aorsmul.$(OBJEXT)
t_aorsmul_LDADD = $(LDADD)
t_aorsmul_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_bin_SOURCES = t-bin.c
t_bin_OBJECTS = t-bin.$(OBJEXT)
t_bin_LDADD = $(LDADD)
t_bin_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_cdiv_ui_SOURCES = t-cdiv_ui.c
t_cdiv_ui_OBJECTS = t-cdiv_ui.$(OBJEXT)
t_cdiv_ui_LDADD = $(LDADD)
t_cdiv_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_cmp_SOURCES = t-cmp.c
t_cmp_OBJECTS = t-cmp.$(OBJEXT)
t_cmp_LDADD = $(LDADD)
t_cmp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_cmp_d_SOURCES = t-cmp_d.c
t_cmp_d_OBJECTS = t-cmp_d.$(OBJEXT)
t_cmp_d_LDADD = $(LDADD)
t_cmp_d_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_cmp_si_SOURCES = t-cmp_si.c
t_cmp_si_OBJECTS = t-cmp_si.$(OBJEXT)
t_cmp_si_LDADD = $(LDADD)
t_cmp_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_cong_SOURCES = t-cong.c
t_cong_OBJECTS = t-cong.$(OBJEXT)
t_cong_LDADD = $(LDADD)
t_cong_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_cong_2exp_SOURCES = t-cong_2exp.c
t_cong_2exp_OBJECTS = t-cong_2exp.$(OBJEXT)
t_cong_2exp_LDADD = $(LDADD)
t_cong_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_div_2exp_SOURCES = t-div_2exp.c
t_div_2exp_OBJECTS = t-div_2exp.$(OBJEXT)
t_div_2exp_LDADD = $(LDADD)
t_div_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_divis_SOURCES = t-divis.c
t_divis_OBJECTS = t-divis.$(OBJEXT)
t_divis_LDADD = $(LDADD)
t_divis_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_divis_2exp_SOURCES = t-divis_2exp.c
t_divis_2exp_OBJECTS = t-divis_2exp.$(OBJEXT)
t_divis_2exp_LDADD = $(LDADD)
t_divis_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_export_SOURCES = t-export.c
t_export_OBJECTS = t-export.$(OBJEXT)
t_export_LDADD = $(LDADD)
t_export_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_fac_ui_SOURCES = t-fac_ui.c
t_fac_ui_OBJECTS = t-fac_ui.$(OBJEXT)
t_fac_ui_LDADD = $(LDADD)
t_fac_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_fdiv_SOURCES = t-fdiv.c
t_fdiv_OBJECTS = t-fdiv.$(OBJEXT)
t_fdiv_LDADD = $(LDADD)
t_fdiv_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_fdiv_ui_SOURCES = t-fdiv_ui.c
t_fdiv_ui_OBJECTS = t-fdiv_ui.$(OBJEXT)
t_fdiv_ui_LDADD = $(LDADD)
t_fdiv_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_fib_ui_SOURCES = t-fib_ui.c
t_fib_ui_OBJECTS = t-fib_ui.$(OBJEXT)
t_fib_ui_LDADD = $(LDADD)
t_fib_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_fits_SOURCES = t-fits.c
t_fits_OBJECTS = t-fits.$(OBJEXT)
t_fits_LDADD = $(LDADD)
t_fits_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_gcd_SOURCES = t-gcd.c
t_gcd_OBJECTS = t-gcd.$(OBJEXT)
t_gcd_LDADD = $(LDADD)
t_gcd_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_gcd_ui_SOURCES = t-gcd_ui.c
t_gcd_ui_OBJECTS = t-gcd_ui.$(OBJEXT)
t_gcd_ui_LDADD = $(LDADD)
t_gcd_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_d_SOURCES = t-get_d.c
t_get_d_OBJECTS = t-get_d.$(OBJEXT)
t_get_d_LDADD = $(LDADD)
t_get_d_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_d_2exp_SOURCES = t-get_d_2exp.c
t_get_d_2exp_OBJECTS = t-get_d_2exp.$(OBJEXT)
t_get_d_2exp_LDADD = $(LDADD)
t_get_d_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_si_SOURCES = t-get_si.c
t_get_si_OBJECTS = t-get_si.$(OBJEXT)
t_get_si_LDADD = $(LDADD)
t_get_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_sx_SOURCES = t-get_sx.c
t_get_sx_OBJECTS = t-get_sx.$(OBJEXT)
t_get_sx_LDADD = $(LDADD)
t_get_sx_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_get_ux_SOURCES = t-get_ux.c
t_get_ux_OBJECTS = t-get_ux.$(OBJEXT)
t_get_ux_LDADD = $(LDADD)
t_get_ux_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_hamdist_SOURCES = t-hamdist.c
t_hamdist_OBJECTS = t-hamdist.$(OBJEXT)
t_hamdist_LDADD = $(LDADD)
t_hamdist_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_import_SOURCES = t-import.c
t_import_OBJECTS = t-import.$(OBJEXT)
t_import_LDADD = $(LDADD)
t_import_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_inp_str_SOURCES = t-inp_str.c
t_inp_str_OBJECTS = t-inp_str.$(OBJEXT)
t_inp_str_LDADD = $(LDADD)
t_inp_str_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_io_raw_SOURCES = t-io_raw.c
t_io_raw_OBJECTS = t-io_raw.$(OBJEXT)
t_io_raw_LDADD = $(LDADD)
t_io_raw_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_jac_SOURCES = t-jac.c
t_jac_OBJECTS = t-jac.$(OBJEXT)
t_jac_LDADD = $(LDADD)
t_jac_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_lcm_SOURCES = t-lcm.c
t_lcm_OBJECTS = t-lcm.$(OBJEXT)
t_lcm_LDADD = $(LDADD)
t_lcm_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_likely_prime_p_SOURCES = t-likely_prime_p.c
t_likely_prime_p_OBJECTS = t-likely_prime_p.$(OBJEXT)
t_likely_prime_p_LDADD = $(LDADD)
t_likely_prime_p_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_lucnum_ui_SOURCES = t-lucnum_ui.c
t_lucnum_ui_OBJECTS = t-lucnum_ui.$(OBJEXT)
t_lucnum_ui_LDADD = $(LDADD)
t_lucnum_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_mul_SOURCES = t-mul.c
t_mul_OBJECTS = t-mul.$(OBJEXT)
t_mul_LDADD = $(LDADD)
t_mul_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_mul_i_SOURCES = t-mul_i.c
t_mul_i_OBJECTS = t-mul_i.$(OBJEXT)
t_mul_i_LDADD = $(LDADD)
t_mul_i_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_next_likely_prime_SOURCES = t-next_likely_prime.c
t_next_likely_prime_OBJECTS = t-next_likely_prime.$(OBJEXT)
t_next_likely_prime_LDADD = $(LDADD)
t_next_likely_prime_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_oddeven_SOURCES = t-oddeven.c
t_oddeven_OBJECTS = t-oddeven.$(OBJEXT)
t_oddeven_LDADD = $(LDADD)
t_oddeven_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_perfpow_SOURCES = t-perfpow.c
t_perfpow_OBJECTS = t-perfpow.$(OBJEXT)
t_perfpow_LDADD = $(LDADD)
t_perfpow_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_perfsqr_SOURCES = t-perfsqr.c
t_perfsqr_OBJECTS = t-perfsqr.$(OBJEXT)
t_perfsqr_LDADD = $(LDADD)
t_perfsqr_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_popcount_SOURCES = t-popcount.c
t_popcount_OBJECTS = t-popcount.$(OBJEXT)
t_popcount_LDADD = $(LDADD)
t_popcount_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_pow_SOURCES = t-pow.c
t_pow_OBJECTS = t-pow.$(OBJEXT)
t_pow_LDADD = $(LDADD)
t_pow_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_powm_SOURCES = t-powm.c
t_powm_OBJECTS = t-powm.$(OBJEXT)
t_powm_LDADD = $(LDADD)
t_powm_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_powm_ui_SOURCES = t-powm_ui.c
t_powm_ui_OBJECTS = t-powm_ui.$(OBJEXT)
t_powm_ui_LDADD = $(LDADD)
t_powm_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_pprime_p_SOURCES = t-pprime_p.c
t_pprime_p_OBJECTS = t-pprime_p.$(OBJEXT)
t_pprime_p_LDADD = $(LDADD)
t_pprime_p_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_root_SOURCES = t-root.c
t_root_OBJECTS = t-root.$(OBJEXT)
t_root_LDADD = $(LDADD)
t_root_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_scan_SOURCES = t-scan.c
t_scan_OBJECTS = t-scan.$(OBJEXT)
t_scan_LDADD = $(LDADD)
t_scan_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_d_SOURCES = t-set_d.c
t_set_d_OBJECTS = t-set_d.$(OBJEXT)
t_set_d_LDADD = $(LDADD)
t_set_d_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_f_SOURCES = t-set_f.c
t_set_f_OBJECTS = t-set_f.$(OBJEXT)
t_set_f_LDADD = $(LDADD)
t_set_f_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_si_SOURCES = t-set_si.c
t_set_si_OBJECTS = t-set_si.$(OBJEXT)
t_set_si_LDADD = $(LDADD)
t_set_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_str_SOURCES = t-set_str.c
t_set_str_OBJECTS = t-set_str.$(OBJEXT)
t_set_str_LDADD = $(LDADD)
t_set_str_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_sx_SOURCES = t-set_sx.c
t_set_sx_OBJECTS = t-set_sx.$(OBJEXT)
t_set_sx_LDADD = $(LDADD)
t_set_sx_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_set_ux_SOURCES = t-set_ux.c
t_set_ux_OBJECTS = t-set_ux.$(OBJEXT)
t_set_ux_LDADD = $(LDADD)
t_set_ux_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_sizeinbase_SOURCES = t-sizeinbase.c
t_sizeinbase_OBJECTS = t-sizeinbase.$(OBJEXT)
t_sizeinbase_LDADD = $(LDADD)
t_sizeinbase_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_sqrtrem_SOURCES = t-sqrtrem.c
t_sqrtrem_OBJECTS = t-sqrtrem.$(OBJEXT)
t_sqrtrem_LDADD = $(LDADD)
t_sqrtrem_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_tdiv_SOURCES = t-tdiv.c
t_tdiv_OBJECTS = t-tdiv.$(OBJEXT)
t_tdiv_LDADD = $(LDADD)
t_tdiv_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_tdiv_ui_SOURCES = t-tdiv_ui.c
t_tdiv_ui_OBJECTS = t-tdiv_ui.$(OBJEXT)
t_tdiv_ui_LDADD = $(LDADD)
t_tdiv_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
t_trial_division_SOURCES = t-trial_division.c
t_trial_division_OBJECTS = t-trial_division.$(OBJEXT)
t_trial_division_LDADD = $(LDADD)
t_trial_division_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libmpir.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = bit.c convert.c dive.c dive_ui.c io.c logic.c reuse.c \
	$(st_hamdist_SOURCES) $(st_popcount_SOURCES) t-addsub.c \
	t-aorsmul.c t-bin.c t-cdiv_ui.c t-cmp.c t-cmp_d.c t-cmp_si.c \
	t-cong.c t-cong_2exp.c t-div_2exp.c t-divis.c t-divis_2exp.c \
	t-export.c t-fac_ui.c t-fdiv.c t-fdiv_ui.c t-fib_ui.c t-fits.c \
	t-gcd.c t-gcd_ui.c t-get_d.c t-get_d_2exp.c t-get_si.c \
	t-get_sx.c t-get_ux.c t-hamdist.c t-import.c t-inp_str.c \
	t-io_raw.c t-jac.c t-lcm.c t-likely_prime_p.c t-lucnum_ui.c \
	t-mul.c t-mul_i.c t-next_likely_prime.c t-oddeven.c \
	t-perfpow.c t-perfsqr.c t-popcount.c t-pow.c t-powm.c \
	t-powm_ui.c t-pprime_p.c t-root.c t-scan.c t-set_d.c t-set_f.c \
	t-set_si.c t-set_str.c t-set_sx.c t-set_ux.c t-sizeinbase.c \
	t-sqrtrem.c t-tdiv.c t-tdiv_ui.c t-trial_division.c
DIST_SOURCES = bit.c convert.c dive.c dive_ui.c io.c logic.c reuse.c \
	$(am__st_hamdist_SOURCES_DIST) $(am__st_popcount_SOURCES_DIST) \
	t-addsub.c t-aorsmul.c t-bin.c t-cdiv_ui.c t-cmp.c t-cmp_d.c \
	t-cmp_si.c t-cong.c t-cong_2exp.c t-div_2exp.c t-divis.c \
	t-divis_2exp.c t-export.c t-fac_ui.c t-fdiv.c t-fdiv_ui.c \
	t-fib_ui.c t-fits.c t-gcd.c t-gcd_ui.c t-get_d.c \
	t-get_d_2exp.c t-get_si.c t-get_sx.c t-get_ux.c t-hamdist.c \
	t-import.c t-inp_str.c t-io_raw.c t-jac.c t-lcm.c \
	t-likely_prime_p.c t-lucnum_ui.c t-mul.c t-mul_i.c \
	t-next_likely_prime.c t-oddeven.c t-perfpow.c t-perfsqr.c \
	t-popcount.c t-pow.c t-powm.c t-powm_ui.c t-pprime_p.c \
	t-root.c t-scan.c t-set_d.c t-set_f.c t-set_si.c t-set_str.c \
	t-set_sx.c t-set_ux.c t-sizeinbase.c t-sqrtrem.c t-tdiv.c \
	t-tdiv_ui.c t-trial_division.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
# Restructured Text title and section.
am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
am__rst_section = sed 'p;s/./=/g;p;g'
# Put stdin (possibly several lines separated by ".  ") in a box.
# Prefix each line by 'col' and terminate each with 'std', for coloring.
# Multi line coloring is problematic with "less -R", so we really need
# to color each line individually.
am__text_box = $(AWK) '{			\
  n = split($$0, lines, "\\.  "); max = 0;	\
  for (i = 1; i <= n; ++i)			\
    if (max < length(lines[i]))			\
      max = length(lines[i]);			\
  for (i = 0; i < max; ++i)			\
    line = line "=";				\
  print col line std;				\
  for (i = 1; i <= n; ++i)			\
    if (lines[i])				\
      print col lines[i] std;			\
  print col line std;				\
}'
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log, and passes
# TESTS_ENVIRONMENT.  Save and restore TERM around use of
# TESTS_ENVIRONMENT, in case that unsets it.
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
srcdir=$(srcdir); export srcdir;			\
rm -f $@-t;						\
am__trap='rm -f '\''$(abs_builddir)/$@-t'\''; (exit $$st); exit $$st'; \
trap "st=129; $$am__trap" 1; trap "st=130; $$am__trap" 2;	\
trap "st=141; $$am__trap" 13; trap "st=143; $$am__trap" 15; \
am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;		\
test "x$$am__odir" = x. || $(MKDIR_P) "$$am__odir" || exit $$?;	\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; __SAVED_TERM=$$TERM;		\
$(TESTS_ENVIRONMENT)
# To be appended to the command running the test.  Handle the stdout
# and stderr redirection, and catch the exit status.
am__check_post = \
>$@-t 2>&1;						\
estatus=$$?;						\
if test -n '$(DISABLE_HARD_ERRORS)'			\
   && test $$estatus -eq 99; then			\
  estatus=1;						\
fi;							\
TERM=$$__SAVED_TERM; export TERM;			\
$(am__tty_colors);					\
xfailed=PASS;						\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    xfailed=XFAIL;;					\
esac;							\
case $$estatus.$$xfailed in				\
    0.XFAIL) col=$$red; res=XPASS;;			\
    0.*)     col=$$grn; res=PASS ;;			\
    77.*)    col=$$blu; res=SKIP ;;			\
    99.*)    col=$$red; res=FAIL ;;			\
    *.XFAIL) col=$$lgn; res=XFAIL;;			\
    *.*)     col=$$red; res=FAIL ;;			\
esac;							\
echo "$${col}$$res$${std}: $$f";			\
echo "$$res: $$f (exit: $$estatus)" |			\
  $(am__rst_section) >$@;				\
cat $@-t >>$@;						\
rm -f $@-t
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck check-html recheck-html
TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
TEST_LOGS_TMP = $(TEST_LOGS:.log=.log-t)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI = @ABI@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BITS_PER_MP_LIMB = @BITS_PER_MP_LIMB@
CALLING_CONVENTIONS_OBJS = @CALLING_CONVENTIONS_OBJS@
CC = @CC@
CCAS = @CCAS@
CC_FOR_BUILD = @CC_FOR_BUILD@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPP_FOR_BUILD = @CPP_FOR_BUILD@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFN_LONG_LONG_LIMB = @DEFN_LONG_LONG_LIMB@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXEEXT_FOR_BUILD = @EXEEXT_FOR_BUILD@
FGREP = @FGREP@
GMP_CC = @GMP_CC@
GMP_CFLAGS = @GMP_CFLAGS@
GMP_LDFLAGS = @GMP_LDFLAGS@
GMP_NAIL_BITS = @GMP_NAIL_BITS@
GREP = @GREP@
GSYM_FLAG = @GSYM_FLAG@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBGMPXX_LDFLAGS = @LIBGMPXX_LDFLAGS@
LIBGMP_DLL = @LIBGMP_DLL@
LIBGMP_LDFLAGS = @LIBGMP_LDFLAGS@
LIBM = @LIBM@
LIBM_FOR_BUILD = @LIBM_FOR_BUILD@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
M4 = @M4@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPIR_AS = @MPIR_AS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJECT_FORMAT = @OBJECT_FORMAT@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPEED_CYCLECOUNTER_OBJ = @SPEED_CYCLECOUNTER_OBJ@
STRIP = @STRIP@
TAL_OBJECT = @TAL_OBJECT@
TUNE_SQR_OBJ = @TUNE_SQR_OBJ@
U_FOR_BUILD = @U_FOR_BUILD@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gmp_srclinks = @gmp_srclinks@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mpn_objects = @mpn_objects@
mpn_objs_in_libgmp = @mpn_objs_in_libgmp@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/tests
LDADD = $(top_builddir)/tests/libtests.la $(top_builddir)/libmpir.la
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@st_hamdist_SOURCES = t-hamdist.c
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@st_hamdist_LDFLAGS = -static
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@st_popcount_SOURCES = t-popcount.c
@ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@st_popcount_LDFLAGS = -static
TESTS = $(check_PROGRAMS)

# Temporary files used by the tests.  Removed automatically if the tests
# pass, but ensure they're cleaned if they fail.
#
CLEANFILES = *.tmp
all: all-am

.SUFFIXES:
.SUFFIXES: .c .html .lo .log .o .obj .test .test$(EXEEXT)
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps tests/mpz/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps tests/mpz/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bit$(EXEEXT): $(bit_OBJECTS) $(bit_DEPENDENCIES) $(EXTRA_bit_DEPENDENCIES) 
	@rm -f bit$(EXEEXT)
	$(LINK) $(bit_OBJECTS) $(bit_LDADD) $(LIBS)
convert$(EXEEXT): $(convert_OBJECTS) $(convert_DEPENDENCIES) $(EXTRA_convert_DEPENDENCIES) 
	@rm -f convert$(EXEEXT)
	$(LINK) $(convert_OBJECTS) $(convert_LDADD) $(LIBS)
dive$(EXEEXT): $(dive_OBJECTS) $(dive_DEPENDENCIES) $(EXTRA_dive_DEPENDENCIES) 
	@rm -f dive$(EXEEXT)
	$(LINK) $(dive_OBJECTS) $(dive_LDADD) $(LIBS)
dive_ui$(EXEEXT): $(dive_ui_OBJECTS) $(dive_ui_DEPENDENCIES) $(EXTRA_dive_ui_DEPENDENCIES) 
	@rm -f dive_ui$(EXEEXT)
	$(LINK) $(dive_ui_OBJECTS) $(dive_ui_LDADD) $(LIBS)
io$(EXEEXT): $(io_OBJECTS) $(io_DEPENDENCIES) $(EXTRA_io_DEPENDENCIES) 
	@rm -f io$(EXEEXT)
	$(LINK) $(io_OBJECTS) $(io_LDADD) $(LIBS)
logic$(EXEEXT): $(logic_OBJECTS) $(logic_DEPENDENCIES) $(EXTRA_logic_DEPENDENCIES) 
	@rm -f logic$(EXEEXT)
	$(LINK) $(logic_OBJECTS) $(logic_LDADD) $(LIBS)
reuse$(EXEEXT): $(reuse_OBJECTS) $(reuse_DEPENDENCIES) $(EXTRA_reuse_DEPENDENCIES) 
	@rm -f reuse$(EXEEXT)
	$(LINK) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)
st_hamdist$(EXEEXT): $(st_hamdist_OBJECTS) $(st_hamdist_DEPENDENCIES) $(EXTRA_st_hamdist_DEPENDENCIES) 
	@rm -f st_hamdist$(EXEEXT)
	$(st_hamdist_LINK) $(st_hamdist_OBJECTS) $(st_hamdist_LDADD) $(LIBS)
st_popcount$(EXEEXT): $(st_popcount_OBJECTS) $(st_popcount_DEPENDENCIES) $(EXTRA_st_popcount_DEPENDENCIES) 
	@rm -f st_popcount$(EXEEXT)
	$(st_popcount_LINK) $(st_popcount_OBJECTS) $(st_popcount_LDADD) $(LIBS)
t-addsub$(EXEEXT): $(t_addsub_OBJECTS) $(t_addsub_DEPENDENCIES) $(EXTRA_t_addsub_DEPENDENCIES) 
	@rm -f t-addsub$(EXEEXT)
	$(LINK) $(t_addsub_OBJECTS) $(t_addsub_LDADD) $(LIBS)
t-aorsmul$(EXEEXT): $(t_aorsmul_OBJECTS) $(t_aorsmul_DEPENDENCIES) $(EXTRA_t_aorsmul_DEPENDENCIES) 
	@rm -f t-aorsmul$(EXEEXT)
	$(LINK) $(t_aorsmul_OBJECTS) $(t_aorsmul_LDADD) $(LIBS)
t-bin$(EXEEXT): $(t_bin_OBJECTS) $(t_bin_DEPENDENCIES) $(EXTRA_t_bin_DEPENDENCIES) 
	@rm -f t-bin$(EXEEXT)
	$(LINK) $(t_bin_OBJECTS) $(t_bin_LDADD) $(LIBS)
t-cdiv_ui$(EXEEXT): $(t_cdiv_ui_OBJECTS) $(t_cdiv_ui_DEPENDENCIES) $(EXTRA_t_cdiv_ui_DEPENDENCIES) 
	@rm -f t-cdiv_ui$(EXEEXT)
	$(LINK) $(t_cdiv_ui_OBJECTS) $(t_cdiv_ui_LDADD) $(LIBS)
t-cmp$(EXEEXT): $(t_cmp_OBJECTS) $(t_cmp_DEPENDENCIES) $(EXTRA_t_cmp_DEPENDENCIES) 
	@rm -f t-cmp$(EXEEXT)
	$(LINK) $(t_cmp_OBJECTS) $(t_cmp_LDADD) $(LIBS)
t-cmp_d$(EXEEXT): $(t_cmp_d_OBJECTS) $(t_cmp_d_DEPENDENCIES) $(EXTRA_t_cmp_d_DEPENDENCIES) 
	@rm -f t-cmp_d$(EXEEXT)
	$(LINK) $(t_cmp_d_OBJECTS) $(t_cmp_d_LDADD) $(LIBS)
t-cmp_si$(EXEEXT): $(t_cmp_si_OBJECTS) $(t_cmp_si_DEPENDENCIES) $(EXTRA_t_cmp_si_DEPENDENCIES) 
	@rm -f t-cmp_si$(EXEEXT)
	$(LINK) $(t_cmp_si_OBJECTS) $(t_cmp_si_LDADD) $(LIBS)
t-cong$(EXEEXT): $(t_cong_OBJECTS) $(t_cong_DEPENDENCIES) $(EXTRA_t_cong_DEPENDENCIES) 
	@rm -f t-cong$(EXEEXT)
	$(LINK) $(t_cong_OBJECTS) $(t_cong_LDADD) $(LIBS)
t-cong_2exp$(EXEEXT): $(t_cong_2exp_OBJECTS) $(t_cong_2exp_DEPENDENCIES) $(EXTRA_t_cong_2exp_DEPENDENCIES) 
	@rm -f t-cong_2exp$(EXEEXT)
	$(LINK) $(t_cong_2exp_OBJECTS) $(t_cong_2exp_LDADD) $(LIBS)
t-div_2exp$(EXEEXT): $(t_div_2exp_OBJECTS) $(t_div_2exp_DEPENDENCIES) $(EXTRA_t_div_2exp_DEPENDENCIES) 
	@rm -f t-div_2exp$(EXEEXT)
	$(LINK) $(t_div_2exp_OBJECTS) $(t_div_2exp_LDADD) $(LIBS)
t-divis$(EXEEXT): $(t_divis_OBJECTS) $(t_divis_DEPENDENCIES) $(EXTRA_t_divis_DEPENDENCIES) 
	@rm -f t-divis$(EXEEXT)
	$(LINK) $(t_divis_OBJECTS) $(t_divis_LDADD) $(LIBS)
t-divis_2exp$(EXEEXT): $(t_divis_2exp_OBJECTS) $(t_divis_2exp_DEPENDENCIES) $(EXTRA_t_divis_2exp_DEPENDENCIES) 
	@rm -f t-divis_2exp$(EXEEXT)
	$(LINK) $(t_divis_2exp_OBJECTS) $(t_divis_2exp_LDADD) $(LIBS)
t-export$(EXEEXT): $(t_export_OBJECTS) $(t_export_DEPENDENCIES) $(EXTRA_t_export_DEPENDENCIES) 
	@rm -f t-export$(EXEEXT)
	$(LINK) $(t_export_OBJECTS) $(t_export_LDADD) $(LIBS)
t-fac_ui$(EXEEXT): $(t_fac_ui_OBJECTS) $(t_fac_ui_DEPENDENCIES) $(EXTRA_t_fac_ui_DEPENDENCIES) 
	@rm -f t-fac_ui$(EXEEXT)
	$(LINK) $(t_fac_ui_OBJECTS) $(t_fac_ui_LDADD) $(LIBS)
t-fdiv$(EXEEXT): $(t_fdiv_OBJECTS) $(t_fdiv_DEPENDENCIES) $(EXTRA_t_fdiv_DEPENDENCIES) 
	@rm -f t-fdiv$(EXEEXT)
	$(LINK) $(t_fdiv_OBJECTS) $(t_fdiv_LDADD) $(LIBS)
t-fdiv_ui$(EXEEXT): $(t_fdiv_ui_OBJECTS) $(t_fdiv_ui_DEPENDENCIES) $(EXTRA_t_fdiv_ui_DEPENDENCIES) 
	@rm -f t-fdiv_ui$(EXEEXT)
	$(LINK) $(t_fdiv_ui_OBJECTS) $(t_fdiv_ui_LDADD) $(LIBS)
t-fib_ui$(EXEEXT): $(t_fib_ui_OBJECTS) $(t_fib_ui_DEPENDENCIES) $(EXTRA_t_fib_ui_DEPENDENCIES) 
	@rm -f t-fib_ui$(EXEEXT)
	$(LINK) $(t_fib_ui_OBJECTS) $(t_fib_ui_LDADD) $(LIBS)
t-fits$(EXEEXT): $(t_fits_OBJECTS) $(t_fits_DEPENDENCIES) $(EXTRA_t_fits_DEPENDENCIES) 
	@rm -f t-fits$(EXEEXT)
	$(LINK) $(t_fits_OBJECTS) $(t_fits_LDADD) $(LIBS)
t-gcd$(EXEEXT): $(t_gcd_OBJECTS) $(t_gcd_DEPENDENCIES) $(EXTRA_t_gcd_DEPENDENCIES) 
	@rm -f t-gcd$(EXEEXT)
	$(LINK) $(t_gcd_OBJECTS) $(t_gcd_LDADD) $(LIBS)
t-gcd_ui$(EXEEXT): $(t_gcd_ui_OBJECTS) $(t_gcd_ui_DEPENDENCIES) $(EXTRA_t_gcd_ui_DEPENDENCIES) 
	@rm -f t-gcd_ui$(EXEEXT)
	$(LINK) $(t_gcd_ui_OBJECTS) $(t_gcd_ui_LDADD) $(LIBS)
t-get_d$(EXEEXT): $(t_get_d_OBJECTS) $(t_get_d_DEPENDENCIES) $(EXTRA_t_get_d_DEPENDENCIES) 
	@rm -f t-get_d$(EXEEXT)
	$(LINK) $(t_get_d_OBJECTS) $(t_get_d_LDADD) $(LIBS)
t-get_d_2exp$(EXEEXT): $(t_get_d_2exp_OBJECTS) $(t_get_d_2exp_DEPENDENCIES) $(EXTRA_t_get_d_2exp_DEPENDENCIES) 
	@rm -f t-get_d_2exp$(EXEEXT)
	$(LINK) $(t_get_d_2exp_OBJECTS) $(t_get_d_2exp_LDADD) $(LIBS)
t-get_si$(EXEEXT): $(t_get_si_OBJECTS) $(t_get_si_DEPENDENCIES) $(EXTRA_t_get_si_DEPENDENCIES) 
	@rm -f t-get_si$(EXEEXT)
	$(LINK) $(t_get_si_OBJECTS) $(t_get_si_LDADD) $(LIBS)
t-get_sx$(EXEEXT): $(t_get_sx_OBJECTS) $(t_get_sx_DEPENDENCIES) $(EXTRA_t_get_sx_DEPENDENCIES) 
	@rm -f t-get_sx$(EXEEXT)
	$(LINK) $(t_get_sx_OBJECTS) $(t_get_sx_LDADD) $(LIBS)
t-get_ux$(EXEEXT): $(t_get_ux_OBJECTS) $(t_get_ux_DEPENDENCIES) $(EXTRA_t_get_ux_DEPENDENCIES) 
	@rm -f t-get_ux$(EXEEXT)
	$(LINK) $(t_get_ux_OBJECTS) $(t_get_ux_LDADD) $(LIBS)
t-hamdist$(EXEEXT): $(t_hamdist_OBJECTS) $(t_hamdist_DEPENDENCIES) $(EXTRA_t_hamdist_DEPENDENCIES) 
	@rm -f t-hamdist$(EXEEXT)
	$(LINK) $(t_hamdist_OBJECTS) $(t_hamdist_LDADD) $(LIBS)
t-import$(EXEEXT): $(t_import_OBJECTS) $(t_import_DEPENDENCIES) $(EXTRA_t_import_DEPENDENCIES) 
	@rm -f t-import$(EXEEXT)
	$(LINK) $(t_import_OBJECTS) $(t_import_LDADD) $(LIBS)
t-inp_str$(EXEEXT): $(t_inp_str_OBJECTS) $(t_inp_str_DEPENDENCIES) $(EXTRA_t_inp_str_DEPENDENCIES) 
	@rm -f t-inp_str$(EXEEXT)
	$(LINK) $(t_inp_str_OBJECTS) $(t_inp_str_LDADD) $(LIBS)
t-io_raw$(EXEEXT): $(t_io_raw_OBJECTS) $(t_io_raw_DEPENDENCIES) $(EXTRA_t_io_raw_DEPENDENCIES) 
	@rm -f t-io_raw$(EXEEXT)
	$(LINK) $(t_io_raw_OBJECTS) $(t_io_raw_LDADD) $(LIBS)
t-jac$(EXEEXT): $(t_jac_OBJECTS) $(t_jac_DEPENDENCIES) $(EXTRA_t_jac_DEPENDENCIES) 
	@rm -f t-jac$(EXEEXT)
	$(LINK) $(t_jac_OBJECTS) $(t_jac_LDADD) $(LIBS)
t-lcm$(EXEEXT): $(t_lcm_OBJECTS) $(t_lcm_DEPENDENCIES) $(EXTRA_t_lcm_DEPENDENCIES) 
	@rm -f t-lcm$(EXEEXT)
	$(LINK) $(t_lcm_OBJECTS) $(t_lcm_LDADD) $(LIBS)
t-likely_prime_p$(EXEEXT): $(t_likely_prime_p_OBJECTS) $(t_likely_prime_p_DEPENDENCIES) $(EXTRA_t_likely_prime_p_DEPENDENCIES) 
	@rm -f t-likely_prime_p$(EXEEXT)
	$(LINK) $(t_likely_prime_p_OBJECTS) $(t_likely_prime_p_LDADD) $(LIBS)
t-lucnum_ui$(EXEEXT): $(t_lucnum_ui_OBJECTS) $(t_lucnum_ui_DEPENDENCIES) $(EXTRA_t_lucnum_ui_DEPENDENCIES) 
	@rm -f t-lucnum_ui$(EXEEXT)
	$(LINK) $(t_lucnum_ui_OBJECTS) $(t_lucnum_ui_LDADD) $(LIBS)
t-mul$(EXEEXT): $(t_mul_OBJECTS) $(t_mul_DEPENDENCIES) $(EXTRA_t_mul_DEPENDENCIES) 
	@rm -f t-mul$(EXEEXT)
	$(LINK) $(t_mul_OBJECTS) $(t_mul_LDADD) $(LIBS)
t-mul_i$(EXEEXT): $(t_mul_i_OBJECTS) $(t_mul_i_DEPENDENCIES) $(EXTRA_t_mul_i_DEPENDENCIES) 
	@rm -f t-mul_i$(EXEEXT)
	$(LINK) $(t_mul_i_OBJECTS) $(t_mul_i_LDADD) $(LIBS)
t-next_likely_prime$(EXEEXT): $(t_next_likely_prime_OBJECTS) $(t_next_likely_prime_DEPENDENCIES) $(EXTRA_t_next_likely_prime_DEPENDENCIES) 
	@rm -f t-next_likely_prime$(EXEEXT)
	$(LINK) $(t_next_likely_prime_OBJECTS) $(t_next_likely_prime_LDADD) $(LIBS)
t-oddeven$(EXEEXT): $(t_oddeven_OBJECTS) $(t_oddeven_DEPENDENCIES) $(EXTRA_t_oddeven_DEPENDENCIES) 
	@rm -f t-oddeven$(EXEEXT)
	$(LINK) $(t_oddeven_OBJECTS) $(t_oddeven_LDADD) $(LIBS)
t-perfpow$(EXEEXT): $(t_perfpow_OBJECTS) $(t_perfpow_DEPENDENCIES) $(EXTRA_t_perfpow_DEPENDENCIES) 
	@rm -f t-perfpow$(EXEEXT)
	$(LINK) $(t_perfpow_OBJECTS) $(t_perfpow_LDADD) $(LIBS)
t-perfsqr$(EXEEXT): $(t_perfsqr_OBJECTS) $(t_perfsqr_DEPENDENCIES) $(EXTRA_t_perfsqr_DEPENDENCIES) 
	@rm -f t-perfsqr$(EXEEXT)
	$(LINK) $(t_perfsqr_OBJECTS) $(t_perfsqr_LDADD) $(LIBS)
t-popcount$(EXEEXT): $(t_popcount_OBJECTS) $(t_popcount_DEPENDENCIES) $(EXTRA_t_popcount_DEPENDENCIES) 
	@rm -f t-popcount$(EXEEXT)
	$(LINK) $(t_popcount_OBJECTS) $(t_popcount_LDADD) $(LIBS)
t-pow$(EXEEXT): $(t_pow_OBJECTS) $(t_pow_DEPENDENCIES) $(EXTRA_t_pow_DEPENDENCIES) 
	@rm -f t-pow$(EXEEXT)
	$(LINK) $(t_pow_OBJECTS) $(t_pow_LDADD) $(LIBS)
t-powm$(EXEEXT): $(t_powm_OBJECTS) $(t_powm_DEPENDENCIES) $(EXTRA_t_powm_DEPENDENCIES) 
	@rm -f t-powm$(EXEEXT)
	$(LINK) $(t_powm_OBJECTS) $(t_powm_LDADD) $(LIBS)
t-powm_ui$(EXEEXT): $(t_powm_ui_OBJECTS) $(t_powm_ui_DEPENDENCIES) $(EXTRA_t_powm_ui_DEPENDENCIES) 
	@rm -f t-powm_ui$(EXEEXT)
	$(LINK) $(t_powm_ui_OBJECTS) $(t_powm_ui_LDADD) $(LIBS)
t-pprime_p$(EXEEXT): $(t_pprime_p_OBJECTS) $(t_pprime_p_DEPENDENCIES) $(EXTRA_t_pprime_p_DEPENDENCIES) 
	@rm -f t-pprime_p$(EXEEXT)
	$(LINK) $(t_pprime_p_OBJECTS) $(t_pprime_p_LDADD) $(LIBS)
t-root$(EXEEXT): $(t_root_OBJECTS) $(t_root_DEPENDENCIES) $(EXTRA_t_root_DEPENDENCIES) 
	@rm -f t-root$(EXEEXT)
	$(LINK) $(t_root_OBJECTS) $(t_root_LDADD) $(LIBS)
t-scan$(EXEEXT): $(t_scan_OBJECTS) $(t_scan_DEPENDENCIES) $(EXTRA_t_scan_DEPENDENCIES) 
	@rm -f t-scan$(EXEEXT)
	$(LINK) $(t_scan_OBJECTS) $(t_scan_LDADD) $(LIBS)
t-set_d$(EXEEXT): $(t_set_d_OBJECTS) $(t_set_d_DEPENDENCIES) $(EXTRA_t_set_d_DEPENDENCIES) 
	@rm -f t-set_d$(EXEEXT)
	$(LINK) $(t_set_d_OBJECTS) $(t_set_d_LDADD) $(LIBS)
t-set_f$(EXEEXT): $(t_set_f_OBJECTS) $(t_set_f_DEPENDENCIES) $(EXTRA_t_set_f_DEPENDENCIES) 
	@rm -f t-set_f$(EXEEXT)
	$(LINK) $(t_set_f_OBJECTS) $(t_set_f_LDADD) $(LIBS)
t-set_si$(EXEEXT): $(t_set_si_OBJECTS) $(t_set_si_DEPENDENCIES) $(EXTRA_t_set_si_DEPENDENCIES) 
	@rm -f t-set_si$(EXEEXT)
	$(LINK) $(t_set_si_OBJECTS) $(t_set_si_LDADD) $(LIBS)
t-set_str$(EXEEXT): $(t_set_str_OBJECTS) $(t_set_str_DEPENDENCIES) $(EXTRA_t_set_str_DEPENDENCIES) 
	@rm -f t-set_str$(EXEEXT)
	$(LINK) $(t_set_str_OBJECTS) $(t_set_str_LDADD) $(LIBS)
t-set_sx$(EXEEXT): $(t_set_sx_OBJECTS) $(t_set_sx_DEPENDENCIES) $(EXTRA_t_set_sx_DEPENDENCIES) 
	@rm -f t-set_sx$(EXEEXT)
	$(LINK) $(t_set_sx_OBJECTS) $(t_set_sx_LDADD) $(LIBS)
t-set_ux$(EXEEXT): $(t_set_ux_OBJECTS) $(t_set_ux_DEPENDENCIES) $(EXTRA_t_set_ux_DEPENDENCIES) 
	@rm -f t-set_ux$(EXEEXT)
	$(LINK) $(t_set_ux_OBJECTS) $(t_set_ux_LDADD) $(LIBS)
t-sizeinbase$(EXEEXT): $(t_sizeinbase_OBJECTS) $(t_sizeinbase_DEPENDENCIES) $(EXTRA_t_sizeinbase_DEPENDENCIES) 
	@rm -f t-sizeinbase$(EXEEXT)
	$(LINK) $(t_sizeinbase_OBJECTS) $(t_sizeinbase_LDADD) $(LIBS)
t-sqrtrem$(EXEEXT): $(t_sqrtrem_OBJECTS) $(t_sqrtrem_DEPENDENCIES) $(EXTRA_t_sqrtrem_DEPENDENCIES) 
	@rm -f t-sqrtrem$(EXEEXT)
	$(LINK) $(t_sqrtrem_OBJECTS) $(t_sqrtrem_LDADD) $(LIBS)
t-tdiv$(EXEEXT): $(t_tdiv_OBJECTS) $(t_tdiv_DEPENDENCIES) $(EXTRA_t_tdiv_DEPENDENCIES) 
	@rm -f t-tdiv$(EXEEXT)
	$(LINK) $(t_tdiv_OBJECTS) $(t_tdiv_LDADD) $(LIBS)
t-tdiv_ui$(EXEEXT): $(t_tdiv_ui_OBJECTS) $(t_tdiv_ui_DEPENDENCIES) $(EXTRA_t_tdiv_ui_DEPENDENCIES) 
	@rm -f t-tdiv_ui$(EXEEXT)
	$(LINK) $(t_tdiv_ui_OBJECTS) $(t_tdiv_ui_LDADD) $(LIBS)
t-trial_division$(EXEEXT): $(t_trial_division_OBJECTS) $(t_trial_division_DEPENDENCIES) $(EXTRA_t_trial_division_DEPENDENCIES) 
	@rm -f t-trial_division$(EXEEXT)
	$(LINK) $(t_trial_division_OBJECTS) $(t_trial_division_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__sh_e_setup);						\
	list='$(TEST_LOGS)';						\
	results=`for f in $$list; do					\
		   test -r $$f && read line < $$f && echo "$$line"	\
		     || echo FAIL;					\
		 done`;							\
	all=`echo "$$results" | sed '/^$$/d' | wc -l | sed -e 's/^[	 ]*//'`; \
	fail=`echo "$$results" | grep -c '^FAIL'`;			\
	pass=`echo "$$results" | grep -c '^PASS'`;			\
	skip=`echo "$$results" | grep -c '^SKIP'`;			\
	xfail=`echo "$$results" | grep -c '^XFAIL'`;			\
	xpass=`echo "$$results" | grep -c '^XPASS'`;			\
	failures=`expr $$fail + $$xpass`;				\
	all=`expr $$all - $$skip`;					\
	if test "$$all" -eq 1; then tests=test; All=;			\
	else tests=tests; All="All "; fi;				\
	case fail=$$fail:xpass=$$xpass:xfail=$$xfail in			\
	  fail=0:xpass=0:xfail=0)					\
	    msg="$$All$$all $$tests passed.  ";				\
	    exit=true;;							\
	  fail=0:xpass=0:xfail=*)					\
	    msg="$$All$$all $$tests behaved as expected";		\
	    if test "$$xfail" -eq 1; then xfailures=failure;		\
	    else xfailures=failures; fi;				\
	    msg="$$msg ($$xfail expected $$xfailures).  ";		\
	    exit=true;;							\
	  fail=*:xpass=0:xfail=*)					\
	    msg="$$fail of $$all $$tests failed.  ";			\
	    exit=false;;						\
	  fail=*:xpass=*:xfail=*)					\
	    msg="$$failures of $$all $$tests did not behave as expected"; \
	    if test "$$xpass" -eq 1; then xpasses=pass;			\
	    else xpasses=passes; fi;					\
	    msg="$$msg ($$xpass unexpected $$xpasses).  ";		\
	    exit=false;;						\
	  *)								\
	    echo >&2 "incorrect case"; exit 4;;				\
	esac;								\
	if test "$$skip" -ne 0; then					\
	  if test "$$skip" -eq 1; then					\
	    msg="$$msg($$skip test was not run).  ";			\
	  else								\
	    msg="$$msg($$skip tests were not run).  ";			\
	  fi;								\
	fi;								\
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  echo "$$msg";							\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for f in $$list; do						\
	    test -r $$f && read line < $$f || line=;			\
	    case $$line in						\
	      PASS:*|XFAIL:*);;						\
	      *) echo; cat $$f;;					\
	    esac;							\
	  done;								\
	} >$(TEST_SUITE_LOG).tmp;					\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if test "$$failures" -ne 0; then				\
	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    msg="$${msg}Please report to $(PACKAGE_BUGREPORT).  ";	\
	  fi;								\
	fi;								\
	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
	$(am__tty_colors);						\
	if $$exit; then							\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	fi;								\
	echo "$$msg" | $(am__text_box) "col=$$col" "std=$$std";		\
	$$exit || exit 1

check-TESTS recheck:
	@if test $@ != recheck; then \
	   list='$(RECHECK_LOGS)'; test -z "$$list" || rm -f $$list; \
	 fi
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@list='' list2='$(TEST_LOGS)'; for f in $$list2; do \
	  test .log = $$f && continue; \
	  if test $@ = recheck; then \
	    test -f $$f || continue; \
	    if test -r $$f && read line < $$f; then \
	      case $$line in FAIL*|XPASS*) : ;; *) continue;; esac; \
	    fi; \
	  fi; \
	  if test -z "$$list"; then list=$$f; else list="$$list $$f"; fi; \
	done; \
	if test $@ = recheck && test -n "$$list"; then \
	  $(am__make_dryrun) || rm -f $$list || exit 1; \
	fi; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$list"
recheck: $(check_PROGRAMS)

am--mostlyclean-test-html:
	list='$(TEST_LOGS:.log=.html)'; test -z "$$list" || rm -f $$list
	rm -f $(TEST_SUITE_HTML)

.log.html:
	@list='$(RST2HTML) $$RST2HTML rst2html rst2html.py';		\
	for r2h in $$list; do						\
	  if ($$r2h --version) >/dev/null 2>&1; then			\
	    R2H=$$r2h;							\
	  fi;								\
	done;								\
	if test -z "$$R2H"; then					\
	  echo >&2 "cannot find rst2html, cannot create $@";		\
	  exit 2;							\
	fi;								\
	$$R2H $< >$@.tmp
	@mv $@.tmp $@

# Be sure to run check first, and then to convert the result.
# Beware of concurrent executions.  Run "check" not "check-TESTS", as
# check-SCRIPTS and other dependencies are rebuilt by the former only.
# And expect check to fail.
check-html recheck-html:
	@target=`echo $@ | sed 's/-html$$//'`; \
	rv=0; $(MAKE) $(AM_MAKEFLAGS) $$target || rv=$$?; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML) TEST_LOGS= || exit 4; \
	exit $$rv
bit.log: bit$(EXEEXT)
	@p='bit$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
convert.log: convert$(EXEEXT)
	@p='convert$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
dive.log: dive$(EXEEXT)
	@p='dive$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
dive_ui.log: dive_ui$(EXEEXT)
	@p='dive_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
io.log: io$(EXEEXT)
	@p='io$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
logic.log: logic$(EXEEXT)
	@p='logic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
reuse.log: reuse$(EXEEXT)
	@p='reuse$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-addsub.log: t-addsub$(EXEEXT)
	@p='t-addsub$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-aorsmul.log: t-aorsmul$(EXEEXT)
	@p='t-aorsmul$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-bin.log: t-bin$(EXEEXT)
	@p='t-bin$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-cdiv_ui.log: t-cdiv_ui$(EXEEXT)
	@p='t-cdiv_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-cmp.log: t-cmp$(EXEEXT)
	@p='t-cmp$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-cmp_d.log: t-cmp_d$(EXEEXT)
	@p='t-cmp_d$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-cmp_si.log: t-cmp_si$(EXEEXT)
	@p='t-cmp_si$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-cong.log: t-cong$(EXEEXT)
	@p='t-cong$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-cong_2exp.log: t-cong_2exp$(EXEEXT)
	@p='t-cong_2exp$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-div_2exp.log: t-div_2exp$(EXEEXT)
	@p='t-div_2exp$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-divis.log: t-divis$(EXEEXT)
	@p='t-divis$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-divis_2exp.log: t-divis_2exp$(EXEEXT)
	@p='t-divis_2exp$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-export.log: t-export$(EXEEXT)
	@p='t-export$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-fac_ui.log: t-fac_ui$(EXEEXT)
	@p='t-fac_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-fdiv.log: t-fdiv$(EXEEXT)
	@p='t-fdiv$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-fdiv_ui.log: t-fdiv_ui$(EXEEXT)
	@p='t-fdiv_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-fib_ui.log: t-fib_ui$(EXEEXT)
	@p='t-fib_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-fits.log: t-fits$(EXEEXT)
	@p='t-fits$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-gcd.log: t-gcd$(EXEEXT)
	@p='t-gcd$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-gcd_ui.log: t-gcd_ui$(EXEEXT)
	@p='t-gcd_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-get_d.log: t-get_d$(EXEEXT)
	@p='t-get_d$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-get_d_2exp.log: t-get_d_2exp$(EXEEXT)
	@p='t-get_d_2exp$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-get_si.log: t-get_si$(EXEEXT)
	@p='t-get_si$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-get_sx.log: t-get_sx$(EXEEXT)
	@p='t-get_sx$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-get_ux.log: t-get_ux$(EXEEXT)
	@p='t-get_ux$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-hamdist.log: t-hamdist$(EXEEXT)
	@p='t-hamdist$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-import.log: t-import$(EXEEXT)
	@p='t-import$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-inp_str.log: t-inp_str$(EXEEXT)
	@p='t-inp_str$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-io_raw.log: t-io_raw$(EXEEXT)
	@p='t-io_raw$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-jac.log: t-jac$(EXEEXT)
	@p='t-jac$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-lcm.log: t-lcm$(EXEEXT)
	@p='t-lcm$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-likely_prime_p.log: t-likely_prime_p$(EXEEXT)
	@p='t-likely_prime_p$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-lucnum_ui.log: t-lucnum_ui$(EXEEXT)
	@p='t-lucnum_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-mul.log: t-mul$(EXEEXT)
	@p='t-mul$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-mul_i.log: t-mul_i$(EXEEXT)
	@p='t-mul_i$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-next_likely_prime.log: t-next_likely_prime$(EXEEXT)
	@p='t-next_likely_prime$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-oddeven.log: t-oddeven$(EXEEXT)
	@p='t-oddeven$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-perfpow.log: t-perfpow$(EXEEXT)
	@p='t-perfpow$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-perfsqr.log: t-perfsqr$(EXEEXT)
	@p='t-perfsqr$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-popcount.log: t-popcount$(EXEEXT)
	@p='t-popcount$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-pow.log: t-pow$(EXEEXT)
	@p='t-pow$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-powm.log: t-powm$(EXEEXT)
	@p='t-powm$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-powm_ui.log: t-powm_ui$(EXEEXT)
	@p='t-powm_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-pprime_p.log: t-pprime_p$(EXEEXT)
	@p='t-pprime_p$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-root.log: t-root$(EXEEXT)
	@p='t-root$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-scan.log: t-scan$(EXEEXT)
	@p='t-scan$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-set_d.log: t-set_d$(EXEEXT)
	@p='t-set_d$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-set_f.log: t-set_f$(EXEEXT)
	@p='t-set_f$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-set_si.log: t-set_si$(EXEEXT)
	@p='t-set_si$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-set_str.log: t-set_str$(EXEEXT)
	@p='t-set_str$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-set_sx.log: t-set_sx$(EXEEXT)
	@p='t-set_sx$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-set_ux.log: t-set_ux$(EXEEXT)
	@p='t-set_ux$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-sizeinbase.log: t-sizeinbase$(EXEEXT)
	@p='t-sizeinbase$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-sqrtrem.log: t-sqrtrem$(EXEEXT)
	@p='t-sqrtrem$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-tdiv.log: t-tdiv$(EXEEXT)
	@p='t-tdiv$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-tdiv_ui.log: t-tdiv_ui$(EXEEXT)
	@p='t-tdiv_ui$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
t-trial_division.log: t-trial_division$(EXEEXT)
	@p='t-trial_division$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
st_hamdist.log: st_hamdist$(EXEEXT)
	@p='st_hamdist$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
st_popcount.log: st_popcount$(EXEEXT)
	@p='st_popcount$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
.test.log:
	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS_TMP)" || rm -f $(TEST_LOGS_TMP)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: am--mostlyclean-test-html mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am check-html install-am install-strip recheck-html

.PHONY: CTAGS GTAGS all all-am am--mostlyclean-test-html check \
	check-TESTS check-am check-html clean clean-checkPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck recheck-html tags uninstall uninstall-am


$(top_builddir)/tests/libtests.la:
	cd $(top_builddir)/tests; $(MAKE) $(AM_MAKEFLAGS) libtests.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
